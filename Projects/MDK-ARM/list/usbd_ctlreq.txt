; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o"bhd2 configuration\usbd_ctlreq.o" --asm_dir=.\list\ --list_dir=.\list\ --depend="bhd2 configuration\usbd_ctlreq.d" --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\..\Drivers\CMSIS\Device\ST\STM32F2xx\Include -I..\..\Drivers\CMSIS\Include -I..\..\Middlewares\ST\STM32_USB_Device_Library\Class\CDC\Inc -I..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc -I..\..\Drivers\STM32F2xx_HAL_Driver\Inc -I..\..\Inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_HAL_DRIVER -DSTM32F215xx --omf_browse="bhd2 configuration\usbd_ctlreq.crf" ..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Src\usbd_ctlreq.c]
                          THUMB

                          AREA ||i.USBD_CtlError||, CODE, READONLY, ALIGN=1

                  USBD_CtlError PROC
;;;702    
;;;703    void USBD_CtlError( USBD_HandleTypeDef *pdev ,
000000  b510              PUSH     {r4,lr}
;;;704                                USBD_SetupReqTypedef *req)
;;;705    {
000002  4604              MOV      r4,r0
;;;706      USBD_LL_StallEP(pdev , 0x80);
000004  2180              MOVS     r1,#0x80
000006  f7fffffe          BL       USBD_LL_StallEP
;;;707      USBD_LL_StallEP(pdev , 0);
00000a  4620              MOV      r0,r4
00000c  e8bd4010          POP      {r4,lr}
000010  2100              MOVS     r1,#0
000012  f7ffbffe          B.W      USBD_LL_StallEP
;;;708    }
;;;709    
                          ENDP


                          AREA ||i.USBD_GetDescriptor||, CODE, READONLY, ALIGN=1

                  USBD_GetDescriptor PROC
;;;323    */
;;;324    static void USBD_GetDescriptor(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
000000  b5f8              PUSH     {r3-r7,lr}
;;;325    	{
000002  4604              MOV      r4,r0
;;;326    	uint16_t len;
;;;327    	uint8_t *pbuf;
;;;328    
;;;329    	switch( req->wValue >> 8 )
000004  8848              LDRH     r0,[r1,#2]
000006  460d              MOV      r5,r1                 ;325
000008  0a01              LSRS     r1,r0,#8
00000a  2908              CMP      r1,#8
00000c  d24b              BCS      |L2.166|
00000e  e8dff001          TBB      [pc,r1]
000012  4a04              DCB      0x4a,0x04
000014  09174a4a          DCB      0x09,0x17,0x4a,0x4a
000018  4048              DCB      0x40,0x48
;;;330    		{
;;;331    		case USB_DESC_TYPE_DEVICE:
;;;332    			pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
00001a  f8d41210          LDR      r1,[r4,#0x210]
00001e  7c20              LDRB     r0,[r4,#0x10]
;;;333    			break;
000020  680a              LDR      r2,[r1,#0]
000022  e032              B        |L2.138|
;;;334    
;;;335    		case USB_DESC_TYPE_CONFIGURATION:     
;;;336    			if(pdev->dev_speed == USBD_SPEED_HIGH )   
000024  7c20              LDRB     r0,[r4,#0x10]
;;;337    				{
;;;338    				pbuf = (uint8_t *)pdev->pClass->GetHSConfigDescriptor(&len);
;;;339    				pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
000026  2602              MOVS     r6,#2
000028  2800              CMP      r0,#0                 ;336
00002a  f8d40214          LDR      r0,[r4,#0x214]        ;336
00002e  d005              BEQ      |L2.60|
;;;340    				}
;;;341    			else
;;;342    				{
;;;343    				pbuf = (uint8_t *)pdev->pClass->GetFSConfigDescriptor(&len);
000030  6ac1              LDR      r1,[r0,#0x2c]
                  |L2.50|
000032  4668              MOV      r0,sp                 ;338
000034  4788              BLX      r1                    ;338
000036  4601              MOV      r1,r0                 ;338
000038  7046              STRB     r6,[r0,#1]            ;339
00003a  e041              B        |L2.192|
                  |L2.60|
00003c  6a81              LDR      r1,[r0,#0x28]         ;339
00003e  e7f8              B        |L2.50|
;;;344    				pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
;;;345    				}
;;;346    			break;
;;;347    
;;;348    		case USB_DESC_TYPE_STRING:
;;;349    			switch ((uint8_t)(req->wValue))
000040  b2c0              UXTB     r0,r0
000042  2806              CMP      r0,#6
000044  d22f              BCS      |L2.166|
000046  e8dff000          TBB      [pc,r0]
00004a  0308              DCB      0x03,0x08
00004c  0d12171c          DCB      0x0d,0x12,0x17,0x1c
;;;350    				{
;;;351    				case USBD_IDX_LANGID_STR:
;;;352    					pbuf = pdev->pDesc->GetLangIDStrDescriptor(pdev->dev_speed, &len);        
000050  f8d41210          LDR      r1,[r4,#0x210]
000054  7c20              LDRB     r0,[r4,#0x10]
;;;353    					break;
000056  684a              LDR      r2,[r1,#4]
000058  e017              B        |L2.138|
;;;354    
;;;355    				case USBD_IDX_MFC_STR:
;;;356    					pbuf = pdev->pDesc->GetManufacturerStrDescriptor(pdev->dev_speed, &len);
00005a  f8d41210          LDR      r1,[r4,#0x210]
00005e  7c20              LDRB     r0,[r4,#0x10]
;;;357    					break;
000060  688a              LDR      r2,[r1,#8]
000062  e012              B        |L2.138|
;;;358    
;;;359    				case USBD_IDX_PRODUCT_STR:
;;;360    					pbuf = pdev->pDesc->GetProductStrDescriptor(pdev->dev_speed, &len);
000064  f8d41210          LDR      r1,[r4,#0x210]
000068  7c20              LDRB     r0,[r4,#0x10]
;;;361    					break;
00006a  68ca              LDR      r2,[r1,#0xc]
00006c  e00d              B        |L2.138|
;;;362    
;;;363    				case USBD_IDX_SERIAL_STR:
;;;364    					pbuf = pdev->pDesc->GetSerialStrDescriptor(pdev->dev_speed, &len);
00006e  f8d41210          LDR      r1,[r4,#0x210]
000072  7c20              LDRB     r0,[r4,#0x10]
;;;365    					break;
000074  690a              LDR      r2,[r1,#0x10]
000076  e008              B        |L2.138|
;;;366    
;;;367    				case USBD_IDX_CONFIG_STR:
;;;368    					pbuf = pdev->pDesc->GetConfigurationStrDescriptor(pdev->dev_speed, &len);
000078  f8d41210          LDR      r1,[r4,#0x210]
00007c  7c20              LDRB     r0,[r4,#0x10]
;;;369    					break;
00007e  694a              LDR      r2,[r1,#0x14]
000080  e003              B        |L2.138|
;;;370    
;;;371    				case USBD_IDX_INTERFACE_STR:
;;;372    					pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
000082  f8d41210          LDR      r1,[r4,#0x210]
000086  7c20              LDRB     r0,[r4,#0x10]
000088  698a              LDR      r2,[r1,#0x18]
                  |L2.138|
00008a  4669              MOV      r1,sp
00008c  4790              BLX      r2
                  |L2.142|
00008e  4601              MOV      r1,r0
000090  e016              B        |L2.192|
;;;373    					break;
;;;374    
;;;375    				default:
;;;376    					#if (USBD_SUPPORT_USER_STRING == 1)
;;;377    					pbuf = pdev->pClass->GetUsrStrDescriptor(pdev, (req->wValue), &len);
;;;378    					break;
;;;379    					#else      
;;;380    					USBD_CtlError(pdev , req);
;;;381    					return;
;;;382    					#endif   
;;;383    				}
;;;384    			break;
;;;385    
;;;386    		case USB_DESC_TYPE_DEVICE_QUALIFIER:                   
;;;387    			if( pdev->dev_speed == USBD_SPEED_HIGH )   
000092  7c20              LDRB     r0,[r4,#0x10]
000094  b938              CBNZ     r0,|L2.166|
;;;388    				{
;;;389    				pbuf = (uint8_t *)pdev->pClass->GetDeviceQualifierDescriptor(&len);
000096  f8d40214          LDR      r0,[r4,#0x214]
00009a  6b41              LDR      r1,[r0,#0x34]
00009c  4668              MOV      r0,sp
00009e  4788              BLX      r1
;;;390    				break;
0000a0  e7f5              B        |L2.142|
;;;391    				}
;;;392    			else
;;;393    				{
;;;394    				USBD_CtlError(pdev, req);
;;;395    				return;
;;;396    				} 
;;;397    
;;;398    			case USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION:
;;;399    				if( pdev->dev_speed == USBD_SPEED_HIGH )   
0000a2  7c20              LDRB     r0,[r4,#0x10]
0000a4  b120              CBZ      r0,|L2.176|
                  |L2.166|
;;;400    					{
;;;401    					pbuf = (uint8_t *)pdev->pClass->GetOtherSpeedConfigDescriptor(&len);
;;;402    					pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
;;;403    					break; 
;;;404    					}
;;;405    				else
;;;406    					{
;;;407    					USBD_CtlError(pdev, req);
;;;408    					return;
;;;409    					}
;;;410    
;;;411    		default: 
;;;412    			USBD_CtlError(pdev, req);
0000a6  4629              MOV      r1,r5
0000a8  4620              MOV      r0,r4
0000aa  f7fffffe          BL       USBD_CtlError
                  |L2.174|
;;;413    			return;
;;;414    		}
;;;415    
;;;416    	if( (len != 0) && (req->wLength != 0) )
;;;417    		{
;;;418    		len = MIN(len , req->wLength);
;;;419    		USBD_CtlSendData(pdev, pbuf, len);
;;;420    		}
;;;421    
;;;422    	}
0000ae  bdf8              POP      {r3-r7,pc}
                  |L2.176|
0000b0  f8d40214          LDR      r0,[r4,#0x214]        ;401
0000b4  6b01              LDR      r1,[r0,#0x30]         ;401
0000b6  4668              MOV      r0,sp                 ;401
0000b8  4788              BLX      r1                    ;401
0000ba  4601              MOV      r1,r0                 ;401
0000bc  2007              MOVS     r0,#7                 ;402
0000be  7048              STRB     r0,[r1,#1]            ;402
                  |L2.192|
0000c0  f8bd0000          LDRH     r0,[sp,#0]            ;416
0000c4  2800              CMP      r0,#0                 ;416
0000c6  d0f2              BEQ      |L2.174|
0000c8  88ea              LDRH     r2,[r5,#6]            ;416
0000ca  2a00              CMP      r2,#0                 ;416
0000cc  d0ef              BEQ      |L2.174|
0000ce  4282              CMP      r2,r0                 ;418
0000d0  d900              BLS      |L2.212|
0000d2  4602              MOV      r2,r0                 ;418
                  |L2.212|
0000d4  f8ad2000          STRH     r2,[sp,#0]            ;418
0000d8  4620              MOV      r0,r4                 ;419
0000da  f7fffffe          BL       USBD_CtlSendData
0000de  bdf8              POP      {r3-r7,pc}
;;;423    
                          ENDP


                          AREA ||i.USBD_GetString||, CODE, READONLY, ALIGN=1

                  USBD_GetString PROC
;;;718      */
;;;719    void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
000000  b570              PUSH     {r4-r6,lr}
;;;720    {
;;;721      uint8_t idx = 0;
000002  2300              MOVS     r3,#0
000004  2800              CMP      r0,#0                 ;720
000006  d01d              BEQ      |L3.68|
;;;722      
;;;723      if (desc != NULL) 
;;;724      {
;;;725        *len =  USBD_GetLen(desc) * 2 + 2;    
000008  4604              MOV      r4,r0
00000a  2500              MOVS     r5,#0
00000c  e002              B        |L3.20|
                  |L3.14|
00000e  1c6d              ADDS     r5,r5,#1
000010  b2ed              UXTB     r5,r5
000012  1c64              ADDS     r4,r4,#1
                  |L3.20|
000014  7826              LDRB     r6,[r4,#0]
000016  2e00              CMP      r6,#0
000018  d1f9              BNE      |L3.14|
00001a  2402              MOVS     r4,#2
00001c  eb040445          ADD      r4,r4,r5,LSL #1
000020  8014              STRH     r4,[r2,#0]
;;;726        unicode[idx++] = *len;
000022  54cc              STRB     r4,[r1,r3]
;;;727        unicode[idx++] =  USB_DESC_TYPE_STRING;
000024  1c5b              ADDS     r3,r3,#1
000026  2203              MOVS     r2,#3
000028  54ca              STRB     r2,[r1,r3]
00002a  2400              MOVS     r4,#0
00002c  1c5b              ADDS     r3,r3,#1
;;;728        
;;;729        while (*desc != '\0') 
00002e  e006              B        |L3.62|
                  |L3.48|
;;;730        {
;;;731          unicode[idx++] = *desc++;
000030  54ca              STRB     r2,[r1,r3]
000032  1c5b              ADDS     r3,r3,#1
000034  b2da              UXTB     r2,r3
;;;732          unicode[idx++] =  0x00;
000036  548c              STRB     r4,[r1,r2]
000038  1c52              ADDS     r2,r2,#1
00003a  b2d3              UXTB     r3,r2
00003c  1c40              ADDS     r0,r0,#1
                  |L3.62|
00003e  7802              LDRB     r2,[r0,#0]            ;729
000040  2a00              CMP      r2,#0                 ;729
000042  d1f5              BNE      |L3.48|
                  |L3.68|
;;;733        }
;;;734      } 
;;;735    }
000044  bd70              POP      {r4-r6,pc}
;;;736    
                          ENDP


                          AREA ||i.USBD_ParseSetupRequest||, CODE, READONLY, ALIGN=1

                  USBD_ParseSetupRequest PROC
;;;684    
;;;685    void USBD_ParseSetupRequest(USBD_SetupReqTypedef *req, uint8_t *pdata)
000000  780a              LDRB     r2,[r1,#0]
;;;686    {
;;;687      req->bmRequest     = *(uint8_t *)  (pdata);
000002  7002              STRB     r2,[r0,#0]
;;;688      req->bRequest      = *(uint8_t *)  (pdata +  1);
000004  784a              LDRB     r2,[r1,#1]
000006  7042              STRB     r2,[r0,#1]
;;;689      req->wValue        = SWAPBYTE      (pdata +  2);
000008  788a              LDRB     r2,[r1,#2]
00000a  78cb              LDRB     r3,[r1,#3]
00000c  eb022203          ADD      r2,r2,r3,LSL #8
000010  8042              STRH     r2,[r0,#2]
;;;690      req->wIndex        = SWAPBYTE      (pdata +  4);
000012  790a              LDRB     r2,[r1,#4]
000014  794b              LDRB     r3,[r1,#5]
000016  eb022203          ADD      r2,r2,r3,LSL #8
00001a  8082              STRH     r2,[r0,#4]
;;;691      req->wLength       = SWAPBYTE      (pdata +  6);
00001c  798a              LDRB     r2,[r1,#6]
00001e  79c9              LDRB     r1,[r1,#7]
000020  eb022101          ADD      r1,r2,r1,LSL #8
000024  80c1              STRH     r1,[r0,#6]
;;;692    
;;;693    }
000026  4770              BX       lr
;;;694    
                          ENDP


                          AREA ||i.USBD_SetConfig||, CODE, READONLY, ALIGN=2

                  USBD_SetConfig PROC
;;;475    */
;;;476    static void USBD_SetConfig(USBD_HandleTypeDef *pdev , 
000000  b570              PUSH     {r4-r6,lr}
;;;477                               USBD_SetupReqTypedef *req)
;;;478    {
000002  460e              MOV      r6,r1
;;;479      
;;;480      static uint8_t  cfgidx;
;;;481      
;;;482      cfgidx = (uint8_t)(req->wValue);                 
000004  4d1a              LDR      r5,|L5.112|
000006  7889              LDRB     r1,[r1,#2]
000008  4604              MOV      r4,r0                 ;478
00000a  7029              STRB     r1,[r5,#0]
;;;483      
;;;484      if (cfgidx > USBD_MAX_NUM_CONFIGURATION ) 
00000c  2901              CMP      r1,#1
00000e  d828              BHI      |L5.98|
;;;485      {            
;;;486         USBD_CtlError(pdev , req);                              
;;;487      } 
;;;488      else 
;;;489      {
;;;490        switch (pdev->dev_state) 
000010  f89401fc          LDRB     r0,[r4,#0x1fc]
000014  2802              CMP      r0,#2
000016  d002              BEQ      |L5.30|
000018  2803              CMP      r0,#3
00001a  d122              BNE      |L5.98|
00001c  e005              B        |L5.42|
                  |L5.30|
;;;491        {
;;;492        case USBD_STATE_ADDRESSED:
;;;493          if (cfgidx) 
00001e  b199              CBZ      r1,|L5.72|
;;;494          {         
;;;495    //					PRINT_FUNC;
;;;496            pdev->dev_config = cfgidx;
;;;497            pdev->dev_state = USBD_STATE_CONFIGURED;
000020  2003              MOVS     r0,#3
000022  6061              STR      r1,[r4,#4]
000024  f88401fc          STRB     r0,[r4,#0x1fc]
;;;498            if(USBD_SetClassConfig(pdev , cfgidx) == USBD_FAIL)
000028  e009              B        |L5.62|
                  |L5.42|
;;;499            {
;;;500              USBD_CtlError(pdev , req);  
;;;501              return;
;;;502            }
;;;503            USBD_CtlSendStatus(pdev);
;;;504          }
;;;505          else 
;;;506          {
;;;507             USBD_CtlSendStatus(pdev);
;;;508          }
;;;509          break;
;;;510          
;;;511        case USBD_STATE_CONFIGURED:
;;;512          if (cfgidx == 0) 
00002a  b191              CBZ      r1,|L5.82|
;;;513          {             
;;;514    //					PRINT_FUNC;
;;;515            pdev->dev_state = USBD_STATE_ADDRESSED;
;;;516            pdev->dev_config = cfgidx;          
;;;517            USBD_ClrClassConfig(pdev , cfgidx);
;;;518            USBD_CtlSendStatus(pdev);
;;;519            
;;;520          } 
;;;521          else  if (cfgidx != pdev->dev_config) 
00002c  6860              LDR      r0,[r4,#4]
00002e  4288              CMP      r0,r1
000030  d00a              BEQ      |L5.72|
;;;522          {
;;;523            /* Clear old configuration */
;;;524            USBD_ClrClassConfig(pdev , pdev->dev_config);
000032  b2c1              UXTB     r1,r0
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       USBD_ClrClassConfig
;;;525            
;;;526            /* set new configuration */
;;;527            pdev->dev_config = cfgidx;
00003a  7829              LDRB     r1,[r5,#0]  ; cfgidx
00003c  6061              STR      r1,[r4,#4]
                  |L5.62|
00003e  4620              MOV      r0,r4                 ;498
000040  f7fffffe          BL       USBD_SetClassConfig
000044  2802              CMP      r0,#2                 ;498
000046  d00c              BEQ      |L5.98|
                  |L5.72|
;;;528            if(USBD_SetClassConfig(pdev , cfgidx) == USBD_FAIL)
;;;529            {
;;;530              USBD_CtlError(pdev , req);  
;;;531              return;
;;;532            }
;;;533            USBD_CtlSendStatus(pdev);
;;;534          }
;;;535          else
;;;536          {
;;;537            USBD_CtlSendStatus(pdev);
000048  4620              MOV      r0,r4
00004a  e8bd4070          POP      {r4-r6,lr}
00004e  f7ffbffe          B.W      USBD_CtlSendStatus
                  |L5.82|
000052  2002              MOVS     r0,#2                 ;515
000054  f88401fc          STRB     r0,[r4,#0x1fc]        ;515
000058  4620              MOV      r0,r4                 ;517
00005a  6061              STR      r1,[r4,#4]            ;517
00005c  f7fffffe          BL       USBD_ClrClassConfig
000060  e7f2              B        |L5.72|
                  |L5.98|
;;;538          }
;;;539          break;
;;;540          
;;;541        default:					
;;;542           USBD_CtlError(pdev , req);                     
000062  4631              MOV      r1,r6
000064  4620              MOV      r0,r4
000066  e8bd4070          POP      {r4-r6,lr}
00006a  f7ffbffe          B.W      USBD_CtlError
;;;543          break;
;;;544        }
;;;545      }
;;;546    }
;;;547    
                          ENDP

00006e  0000              DCW      0x0000
                  |L5.112|
                          DCD      ||.data||

                          AREA ||i.USBD_StdDevReq||, CODE, READONLY, ALIGN=1

                  USBD_StdDevReq PROC
;;;118    */
;;;119    USBD_StatusTypeDef  USBD_StdDevReq (USBD_HandleTypeDef *pdev , USBD_SetupReqTypedef  *req)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;120    {
;;;121      USBD_StatusTypeDef ret = USBD_OK;  
000004  2600              MOVS     r6,#0
;;;122      
;;;123      switch (req->bRequest) 
000006  784b              LDRB     r3,[r1,#1]
000008  2501              MOVS     r5,#1
00000a  4632              MOV      r2,r6
00000c  2b0a              CMP      r3,#0xa
00000e  d243              BCS      |L6.152|
000010  e8dff003          TBB      [pc,r3]
000014  3c584251          DCB      0x3c,0x58,0x42,0x51
000018  42080542          DCB      0x42,0x08,0x05,0x42
00001c  2a27              DCB      0x2a,0x27
;;;124      {
;;;125      case USB_REQ_GET_DESCRIPTOR: 
;;;126        
;;;127        USBD_GetDescriptor(pdev, req);
00001e  f7fffffe          BL       USBD_GetDescriptor
;;;128        break;
000022  e063              B        |L6.236|
;;;129        
;;;130      case USB_REQ_SET_ADDRESS:                      
;;;131        USBD_SetAddress(pdev, req);
000024  4604              MOV      r4,r0
000026  8888              LDRH     r0,[r1,#4]
000028  b9c8              CBNZ     r0,|L6.94|
00002a  88c8              LDRH     r0,[r1,#6]
00002c  b9b8              CBNZ     r0,|L6.94|
00002e  7888              LDRB     r0,[r1,#2]
000030  f000077f          AND      r7,r0,#0x7f
000034  f89401fc          LDRB     r0,[r4,#0x1fc]
000038  2803              CMP      r0,#3
00003a  d010              BEQ      |L6.94|
00003c  f88471fe          STRB     r7,[r4,#0x1fe]
000040  4639              MOV      r1,r7
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       USBD_LL_SetUSBAddress
000048  4620              MOV      r0,r4
00004a  f7fffffe          BL       USBD_CtlSendStatus
00004e  b11f              CBZ      r7,|L6.88|
000050  2002              MOVS     r0,#2
000052  f88401fc          STRB     r0,[r4,#0x1fc]
000056  e049              B        |L6.236|
                  |L6.88|
000058  f88451fc          STRB     r5,[r4,#0x1fc]
00005c  e046              B        |L6.236|
                  |L6.94|
00005e  4620              MOV      r0,r4
000060  e01a              B        |L6.152|
;;;132        break;
;;;133        
;;;134      case USB_REQ_SET_CONFIGURATION:                    
;;;135        USBD_SetConfig (pdev , req);
000062  f7fffffe          BL       USBD_SetConfig
;;;136        break;
000066  e041              B        |L6.236|
000068  88cb              LDRH     r3,[r1,#6]
00006a  2b01              CMP      r3,#1
00006c  d114              BNE      |L6.152|
00006e  f89031fc          LDRB     r3,[r0,#0x1fc]
000072  2b02              CMP      r3,#2
000074  d002              BEQ      |L6.124|
000076  2b03              CMP      r3,#3
000078  d10e              BNE      |L6.152|
00007a  e004              B        |L6.134|
                  |L6.124|
00007c  6082              STR      r2,[r0,#8]
00007e  2201              MOVS     r2,#1
000080  f1000108          ADD      r1,r0,#8
000084  e014              B        |L6.176|
                  |L6.134|
000086  2201              MOVS     r2,#1
000088  1d01              ADDS     r1,r0,#4
00008a  e011              B        |L6.176|
00008c  f89021fc          LDRB     r2,[r0,#0x1fc]
000090  2a02              CMP      r2,#2
000092  d004              BEQ      |L6.158|
000094  2a03              CMP      r2,#3
000096  d002              BEQ      |L6.158|
                  |L6.152|
000098  f7fffffe          BL       USBD_CtlError
00009c  e026              B        |L6.236|
                  |L6.158|
00009e  60c5              STR      r5,[r0,#0xc]
0000a0  f8d01204          LDR      r1,[r0,#0x204]
0000a4  b109              CBZ      r1,|L6.170|
0000a6  2103              MOVS     r1,#3
0000a8  60c1              STR      r1,[r0,#0xc]
                  |L6.170|
0000aa  2202              MOVS     r2,#2
0000ac  f100010c          ADD      r1,r0,#0xc
                  |L6.176|
0000b0  f7fffffe          BL       USBD_CtlSendData
0000b4  e01a              B        |L6.236|
;;;137        
;;;138      case USB_REQ_GET_CONFIGURATION:                 
;;;139        USBD_GetConfig (pdev , req);
;;;140        break;
;;;141        
;;;142      case USB_REQ_GET_STATUS:                                  
;;;143        USBD_GetStatus (pdev , req);
;;;144        break;
;;;145        
;;;146        
;;;147      case USB_REQ_SET_FEATURE:   
;;;148        USBD_SetFeature (pdev , req);    
0000b6  4604              MOV      r4,r0
0000b8  8848              LDRH     r0,[r1,#2]
0000ba  2801              CMP      r0,#1
0000bc  d116              BNE      |L6.236|
0000be  f8c45204          STR      r5,[r4,#0x204]
0000c2  e00b              B        |L6.220|
;;;149        break;
;;;150        
;;;151      case USB_REQ_CLEAR_FEATURE:                                   
;;;152        USBD_ClrFeature (pdev , req);
0000c4  4604              MOV      r4,r0
0000c6  f89001fc          LDRB     r0,[r0,#0x1fc]
0000ca  2802              CMP      r0,#2
0000cc  d001              BEQ      |L6.210|
0000ce  2803              CMP      r0,#3
0000d0  d1c5              BNE      |L6.94|
                  |L6.210|
0000d2  8848              LDRH     r0,[r1,#2]
0000d4  2801              CMP      r0,#1
0000d6  d109              BNE      |L6.236|
0000d8  f8c42204          STR      r2,[r4,#0x204]
                  |L6.220|
0000dc  f8d40214          LDR      r0,[r4,#0x214]
0000e0  6882              LDR      r2,[r0,#8]
0000e2  4620              MOV      r0,r4
0000e4  4790              BLX      r2
0000e6  4620              MOV      r0,r4
0000e8  f7fffffe          BL       USBD_CtlSendStatus
                  |L6.236|
;;;153        break;
;;;154        
;;;155      default:  
;;;156        USBD_CtlError(pdev , req);
;;;157        break;
;;;158      }
;;;159      
;;;160      return ret;
0000ec  4630              MOV      r0,r6
;;;161    }
0000ee  e8bd81f0          POP      {r4-r8,pc}
;;;162    
                          ENDP


                          AREA ||i.USBD_StdEPReq||, CODE, READONLY, ALIGN=1

                  USBD_StdEPReq PROC
;;;206    */
;;;207    USBD_StatusTypeDef  USBD_StdEPReq (USBD_HandleTypeDef *pdev , USBD_SetupReqTypedef  *req)
000000  b570              PUSH     {r4-r6,lr}
;;;208    {
000002  460d              MOV      r5,r1
000004  4604              MOV      r4,r0
;;;209      
;;;210      uint8_t   ep_addr;
;;;211      USBD_StatusTypeDef ret = USBD_OK; 
;;;212      USBD_EndpointTypeDef   *pep;
;;;213      ep_addr  = LOBYTE(req->wIndex);   
000006  7909              LDRB     r1,[r1,#4]
;;;214      
;;;215      switch (req->bRequest) 
000008  7868              LDRB     r0,[r5,#1]
00000a  2600              MOVS     r6,#0                 ;211
00000c  b378              CBZ      r0,|L7.110|
00000e  2801              CMP      r0,#1
000010  d016              BEQ      |L7.64|
000012  2803              CMP      r0,#3
000014  d136              BNE      |L7.132|
;;;216      {
;;;217        
;;;218      case USB_REQ_SET_FEATURE :
;;;219        
;;;220        switch (pdev->dev_state) 
000016  f89401fc          LDRB     r0,[r4,#0x1fc]
00001a  2802              CMP      r0,#2
00001c  d017              BEQ      |L7.78|
00001e  2803              CMP      r0,#3
000020  d12c              BNE      |L7.124|
;;;221        {
;;;222        case USBD_STATE_ADDRESSED:          
;;;223          if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
;;;224          {
;;;225            USBD_LL_StallEP(pdev , ep_addr);
;;;226          }
;;;227          break;	
;;;228          
;;;229        case USBD_STATE_CONFIGURED:   
;;;230          if (req->wValue == USB_FEATURE_EP_HALT)
000022  8868              LDRH     r0,[r5,#2]
000024  b928              CBNZ     r0,|L7.50|
;;;231          {
;;;232            if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
000026  b121              CBZ      r1,|L7.50|
000028  2980              CMP      r1,#0x80
00002a  d002              BEQ      |L7.50|
;;;233            { 
;;;234              USBD_LL_StallEP(pdev , ep_addr);
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       USBD_LL_StallEP
                  |L7.50|
;;;235              
;;;236            }
;;;237          }
;;;238          pdev->pClass->Setup (pdev, req);   
000032  f8d40214          LDR      r0,[r4,#0x214]
000036  4629              MOV      r1,r5
000038  6882              LDR      r2,[r0,#8]
00003a  4620              MOV      r0,r4
00003c  4790              BLX      r2
;;;239          USBD_CtlSendStatus(pdev);
;;;240          
;;;241          break;
00003e  e012              B        |L7.102|
                  |L7.64|
;;;242          
;;;243        default:                         
;;;244          USBD_CtlError(pdev , req);
;;;245          break;    
;;;246        }
;;;247        break;
;;;248        
;;;249      case USB_REQ_CLEAR_FEATURE :
;;;250        
;;;251        switch (pdev->dev_state) 
000040  f89401fc          LDRB     r0,[r4,#0x1fc]
000044  2802              CMP      r0,#2
000046  d002              BEQ      |L7.78|
000048  2803              CMP      r0,#3
00004a  d117              BNE      |L7.124|
00004c  e003              B        |L7.86|
                  |L7.78|
;;;252        {
;;;253        case USBD_STATE_ADDRESSED:          
;;;254          if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
00004e  b1c9              CBZ      r1,|L7.132|
000050  2980              CMP      r1,#0x80
000052  d11b              BNE      |L7.140|
000054  e016              B        |L7.132|
                  |L7.86|
;;;255          {
;;;256            USBD_LL_StallEP(pdev , ep_addr);
;;;257          }
;;;258          break;	
;;;259          
;;;260        case USBD_STATE_CONFIGURED:   
;;;261          if (req->wValue == USB_FEATURE_EP_HALT)
000056  8868              LDRH     r0,[r5,#2]
000058  b9a0              CBNZ     r0,|L7.132|
;;;262          {
;;;263            if ((ep_addr & 0x7F) != 0x00) 
00005a  0648              LSLS     r0,r1,#25
00005c  d003              BEQ      |L7.102|
;;;264            {        
;;;265              USBD_LL_ClearStallEP(pdev , ep_addr);
00005e  4620              MOV      r0,r4
000060  f7fffffe          BL       USBD_LL_ClearStallEP
;;;266              pdev->pClass->Setup (pdev, req);
000064  e7e5              B        |L7.50|
                  |L7.102|
;;;267            }
;;;268            USBD_CtlSendStatus(pdev);
000066  4620              MOV      r0,r4
000068  f7fffffe          BL       USBD_CtlSendStatus
00006c  e00a              B        |L7.132|
                  |L7.110|
00006e  e7ff              B        |L7.112|
                  |L7.112|
;;;269          }
;;;270          break;
;;;271          
;;;272        default:                         
;;;273          USBD_CtlError(pdev , req);
;;;274          break;    
;;;275        }
;;;276        break;
;;;277        
;;;278      case USB_REQ_GET_STATUS:                  
;;;279        switch (pdev->dev_state) 
000070  f89401fc          LDRB     r0,[r4,#0x1fc]
000074  2802              CMP      r0,#2
000076  d007              BEQ      |L7.136|
000078  2803              CMP      r0,#3
00007a  d00b              BEQ      |L7.148|
                  |L7.124|
;;;280        {
;;;281        case USBD_STATE_ADDRESSED:          
;;;282          if ((ep_addr & 0x7F) != 0x00) 
;;;283          {
;;;284            USBD_LL_StallEP(pdev , ep_addr);
;;;285          }
;;;286          break;	
;;;287          
;;;288        case USBD_STATE_CONFIGURED:
;;;289          pep = ((ep_addr & 0x80) == 0x80) ? &pdev->ep_in[ep_addr & 0x7F]:\
;;;290                                             &pdev->ep_out[ep_addr & 0x7F];
;;;291          if(USBD_LL_IsStallEP(pdev, ep_addr))
;;;292          {
;;;293            pep->status = 0x0001;     
;;;294          }
;;;295          else
;;;296          {
;;;297            pep->status = 0x0000;  
;;;298          }
;;;299          
;;;300          USBD_CtlSendData (pdev,
;;;301                            (uint8_t *)&pep->status,
;;;302                            2);
;;;303          break;
;;;304          
;;;305        default:                         
;;;306          USBD_CtlError(pdev , req);
00007c  4629              MOV      r1,r5
00007e  4620              MOV      r0,r4
000080  f7fffffe          BL       USBD_CtlError
                  |L7.132|
;;;307          break;
;;;308        }
;;;309        break;
;;;310        
;;;311      default:
;;;312        break;
;;;313      }
;;;314      return ret;
000084  4630              MOV      r0,r6
;;;315    }
000086  bd70              POP      {r4-r6,pc}
                  |L7.136|
000088  0648              LSLS     r0,r1,#25             ;282
00008a  d0fb              BEQ      |L7.132|
                  |L7.140|
00008c  4620              MOV      r0,r4                 ;284
00008e  f7fffffe          BL       USBD_LL_StallEP
000092  e7f7              B        |L7.132|
                  |L7.148|
000094  0608              LSLS     r0,r1,#24             ;289
000096  f001007f          AND      r0,r1,#0x7f           ;290
00009a  eb041500          ADD      r5,r4,r0,LSL #4       ;290
00009e  d501              BPL      |L7.164|
0000a0  3514              ADDS     r5,r5,#0x14           ;289
0000a2  e001              B        |L7.168|
                  |L7.164|
0000a4  f5057582          ADD      r5,r5,#0x104          ;289
                  |L7.168|
0000a8  4620              MOV      r0,r4                 ;291
0000aa  f7fffffe          BL       USBD_LL_IsStallEP
0000ae  b100              CBZ      r0,|L7.178|
0000b0  2001              MOVS     r0,#1                 ;293
                  |L7.178|
0000b2  6028              STR      r0,[r5,#0]            ;300
0000b4  2202              MOVS     r2,#2                 ;300
0000b6  4629              MOV      r1,r5                 ;300
0000b8  4620              MOV      r0,r4                 ;300
0000ba  f7fffffe          BL       USBD_CtlSendData
0000be  e7e1              B        |L7.132|
;;;316    
                          ENDP


                          AREA ||i.USBD_StdItfReq||, CODE, READONLY, ALIGN=1

                  USBD_StdItfReq PROC
;;;169    */
;;;170    USBD_StatusTypeDef  USBD_StdItfReq (USBD_HandleTypeDef *pdev , USBD_SetupReqTypedef  *req)
000000  b570              PUSH     {r4-r6,lr}
;;;171    {
000002  4605              MOV      r5,r0
;;;172      USBD_StatusTypeDef ret = USBD_OK; 
;;;173      
;;;174      switch (pdev->dev_state) 
000004  f89001fc          LDRB     r0,[r0,#0x1fc]
000008  460c              MOV      r4,r1                 ;171
00000a  2803              CMP      r0,#3
00000c  d10d              BNE      |L8.42|
;;;175      {
;;;176      case USBD_STATE_CONFIGURED:
;;;177        
;;;178        if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES) 
00000e  7920              LDRB     r0,[r4,#4]
000010  2801              CMP      r0,#1
000012  d80a              BHI      |L8.42|
;;;179        {
;;;180          pdev->pClass->Setup (pdev, req); 
000014  f8d50214          LDR      r0,[r5,#0x214]
000018  6882              LDR      r2,[r0,#8]
00001a  4628              MOV      r0,r5
00001c  4790              BLX      r2
;;;181          
;;;182          if((req->wLength == 0)&& (ret == USBD_OK))
00001e  88e0              LDRH     r0,[r4,#6]
000020  b930              CBNZ     r0,|L8.48|
;;;183          {
;;;184             USBD_CtlSendStatus(pdev);
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       USBD_CtlSendStatus
000028  e002              B        |L8.48|
                  |L8.42|
;;;185          }
;;;186        } 
;;;187        else 
;;;188        {                                               
;;;189           USBD_CtlError(pdev , req);
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       USBD_CtlError
                  |L8.48|
;;;190        }
;;;191        break;
;;;192        
;;;193      default:
;;;194         USBD_CtlError(pdev , req);
;;;195        break;
;;;196      }
;;;197      return USBD_OK;
000030  2000              MOVS     r0,#0
;;;198    }
000032  bd70              POP      {r4-r6,pc}
;;;199    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=0

                  cfgidx
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\Middlewares\\ST\\STM32_USB_Device_Library\\Core\\Src\\usbd_ctlreq.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_usbd_ctlreq_c_f346f8f1____REV16|
#line 129 "..\\..\\Drivers\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_usbd_ctlreq_c_f346f8f1____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_usbd_ctlreq_c_f346f8f1____REVSH|
#line 144
|__asm___13_usbd_ctlreq_c_f346f8f1____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
