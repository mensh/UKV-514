; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o"bhd2 configuration\stm32f2xx_hal_pwr_ex.o" --asm_dir=.\list\ --list_dir=.\list\ --depend="bhd2 configuration\stm32f2xx_hal_pwr_ex.d" --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\..\Drivers\CMSIS\Device\ST\STM32F2xx\Include -I..\..\Drivers\CMSIS\Include -I..\..\Middlewares\ST\STM32_USB_Device_Library\Class\CDC\Inc -I..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc -I..\..\Drivers\STM32F2xx_HAL_Driver\Inc -I..\..\Inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_HAL_DRIVER -DSTM32F215xx --omf_browse="bhd2 configuration\stm32f2xx_hal_pwr_ex.crf" ..\..\Drivers\STM32F2xx_HAL_Driver\Src\stm32f2xx_hal_pwr_ex.c]
                          THUMB

                          AREA ||i.HAL_PWREx_DisableBkUpReg||, CODE, READONLY, ALIGN=2

                  HAL_PWREx_DisableBkUpReg PROC
;;;142      */
;;;143    HAL_StatusTypeDef HAL_PWREx_DisableBkUpReg(void)
000000  b570              PUSH     {r4-r6,lr}
;;;144    {
;;;145      uint32_t timeout = 0; 
;;;146    
;;;147      *(__IO uint32_t *) CSR_BRE_BB = (uint32_t)DISABLE;
000002  490b              LDR      r1,|L1.48|
000004  2000              MOVS     r0,#0
000006  f8c100a4          STR      r0,[r1,#0xa4]
;;;148    
;;;149      /* Get timeout */
;;;150      timeout = HAL_GetTick() + PWR_BKPREG_TIMEOUT_VALUE;
00000a  f7fffffe          BL       HAL_GetTick
00000e  f500747a          ADD      r4,r0,#0x3e8
;;;151      /* Wait till Backup regulator ready flag is set */  
;;;152      while(__HAL_PWR_GET_FLAG(PWR_FLAG_BRR) != RESET)
000012  4d08              LDR      r5,|L1.52|
000014  e006              B        |L1.36|
;;;153      {
;;;154        if(HAL_GetTick() >= timeout)
000016  bf00              NOP      
                  |L1.24|
000018  f7fffffe          BL       HAL_GetTick
00001c  42a0              CMP      r0,r4
00001e  d301              BCC      |L1.36|
;;;155        {
;;;156          return HAL_TIMEOUT;
000020  2003              MOVS     r0,#3
;;;157        } 
;;;158      }
;;;159      return HAL_OK;
;;;160    }
000022  bd70              POP      {r4-r6,pc}
                  |L1.36|
000024  6868              LDR      r0,[r5,#4]            ;152
000026  43c0              MVNS     r0,r0                 ;152
000028  0700              LSLS     r0,r0,#28             ;152
00002a  d5f5              BPL      |L1.24|
00002c  2000              MOVS     r0,#0                 ;159
00002e  bd70              POP      {r4-r6,pc}
;;;161    
                          ENDP

                  |L1.48|
                          DCD      0x420e0000
                  |L1.52|
                          DCD      0x40007000

                          AREA ||i.HAL_PWREx_DisableFlashPowerDown||, CODE, READONLY, ALIGN=2

                  HAL_PWREx_DisableFlashPowerDown PROC
;;;176      */
;;;177    void HAL_PWREx_DisableFlashPowerDown(void)
000000  4901              LDR      r1,|L2.8|
;;;178    {
;;;179      *(__IO uint32_t *) CR_FPDS_BB = (uint32_t)DISABLE;
000002  2000              MOVS     r0,#0
000004  6248              STR      r0,[r1,#0x24]
;;;180    }
000006  4770              BX       lr
;;;181    
                          ENDP

                  |L2.8|
                          DCD      0x420e0000

                          AREA ||i.HAL_PWREx_EnableBkUpReg||, CODE, READONLY, ALIGN=2

                  HAL_PWREx_EnableBkUpReg PROC
;;;118      */
;;;119    HAL_StatusTypeDef HAL_PWREx_EnableBkUpReg(void)
000000  b570              PUSH     {r4-r6,lr}
;;;120    {
;;;121      uint32_t timeout = 0;   
;;;122    
;;;123      *(__IO uint32_t *) CSR_BRE_BB = (uint32_t)ENABLE;
000002  490b              LDR      r1,|L3.48|
000004  2001              MOVS     r0,#1
000006  f8c100a4          STR      r0,[r1,#0xa4]
;;;124    
;;;125      /* Get timeout */
;;;126      timeout = HAL_GetTick() + PWR_BKPREG_TIMEOUT_VALUE;
00000a  f7fffffe          BL       HAL_GetTick
00000e  f500747a          ADD      r4,r0,#0x3e8
;;;127      /* Wait till Backup regulator ready flag is set */  
;;;128      while(__HAL_PWR_GET_FLAG(PWR_FLAG_BRR) == RESET)
000012  4d08              LDR      r5,|L3.52|
000014  e006              B        |L3.36|
;;;129      {
;;;130        if(HAL_GetTick() >= timeout)
000016  bf00              NOP      
                  |L3.24|
000018  f7fffffe          BL       HAL_GetTick
00001c  42a0              CMP      r0,r4
00001e  d301              BCC      |L3.36|
;;;131        {
;;;132          return HAL_TIMEOUT;
000020  2003              MOVS     r0,#3
;;;133        } 
;;;134      }
;;;135      return HAL_OK;
;;;136    }
000022  bd70              POP      {r4-r6,pc}
                  |L3.36|
000024  6868              LDR      r0,[r5,#4]            ;128
000026  43c0              MVNS     r0,r0                 ;128
000028  0700              LSLS     r0,r0,#28             ;128
00002a  d4f5              BMI      |L3.24|
00002c  2000              MOVS     r0,#0                 ;135
00002e  bd70              POP      {r4-r6,pc}
;;;137    
                          ENDP

                  |L3.48|
                          DCD      0x420e0000
                  |L3.52|
                          DCD      0x40007000

                          AREA ||i.HAL_PWREx_EnableFlashPowerDown||, CODE, READONLY, ALIGN=2

                  HAL_PWREx_EnableFlashPowerDown PROC
;;;166      */
;;;167    void HAL_PWREx_EnableFlashPowerDown(void)
000000  4901              LDR      r1,|L4.8|
;;;168    {
;;;169      *(__IO uint32_t *) CR_FPDS_BB = (uint32_t)ENABLE;
000002  2001              MOVS     r0,#1
000004  6248              STR      r0,[r1,#0x24]
;;;170    }
000006  4770              BX       lr
;;;171    
                          ENDP

                  |L4.8|
                          DCD      0x420e0000

;*** Start embedded assembler ***

#line 1 "..\\..\\Drivers\\STM32F2xx_HAL_Driver\\Src\\stm32f2xx_hal_pwr_ex.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___22_stm32f2xx_hal_pwr_ex_c_1028ebfa____REV16|
#line 129 "..\\..\\Drivers\\CMSIS\\Include\\core_cmInstr.h"
|__asm___22_stm32f2xx_hal_pwr_ex_c_1028ebfa____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___22_stm32f2xx_hal_pwr_ex_c_1028ebfa____REVSH|
#line 144
|__asm___22_stm32f2xx_hal_pwr_ex_c_1028ebfa____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
