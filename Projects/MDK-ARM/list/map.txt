; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o"bhd2 configuration\map.o" --asm_dir=.\list\ --list_dir=.\list\ --depend="bhd2 configuration\map.d" --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\..\Drivers\CMSIS\Device\ST\STM32F2xx\Include -I..\..\Drivers\CMSIS\Include -I..\..\Middlewares\ST\STM32_USB_Device_Library\Class\CDC\Inc -I..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc -I..\..\Drivers\STM32F2xx_HAL_Driver\Inc -I..\..\Inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_HAL_DRIVER -DSTM32F215xx --omf_browse="bhd2 configuration\map.crf" ..\..\Src\core\map.c]
                          THUMB

                          AREA ||i.MAP_add||, CODE, READONLY, ALIGN=1

                  MAP_add PROC
;;;7      
;;;8      void MAP_add(tdMap *_map, tdMapKey _key, tdPMapFunction _function, tdMapFunctionSettings *_pSettings)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;9      	{
000004  4604              MOV      r4,r0
;;;10     	// Memory size is const(MAP_SIZE) so make sure that it's high enough.
;;;11     	tdMapHandler *pHandler;
;;;12     	tdMapHandler *pNextHandler;
;;;13     	int index;
;;;14     
;;;15     	if( _map->size < MAP_SIZE == 0 )
000006  f8d00180          LDR      r0,[r0,#0x180]
00000a  4699              MOV      r9,r3                 ;9
00000c  4692              MOV      r10,r2                ;9
00000e  460d              MOV      r5,r1                 ;9
000010  2820              CMP      r0,#0x20
000012  da42              BGE      |L1.154|
;;;16     		return;
;;;17     
;;;18     	if( _map->size == 0 )
000014  b350              CBZ      r0,|L1.108|
;;;19     		{
;;;20     		index = 0;
;;;21     		}
;;;22     	else
;;;23     		{
;;;24     		if( _key < _map->handler[ 0 ].key )
000016  6821              LDR      r1,[r4,#0]
000018  42a9              CMP      r1,r5
00001a  d901              BLS      |L1.32|
;;;25     			{
;;;26     			index = 0;
00001c  2000              MOVS     r0,#0
00001e  e011              B        |L1.68|
                  |L1.32|
;;;27     			}
;;;28     		else if( _key > _map->handler[ _map->size - 1 ].key )
000020  eb000140          ADD      r1,r0,r0,LSL #1
000024  eb040181          ADD      r1,r4,r1,LSL #2
000028  f8511c0c          LDR      r1,[r1,#-0xc]
00002c  42a9              CMP      r1,r5
00002e  d309              BCC      |L1.68|
;;;29     			{
;;;30     			index = _map->size;
;;;31     			}
;;;32     		else
;;;33     			{
;;;34     			index = MAP_binarySearch(_map, _key);
000030  4629              MOV      r1,r5
000032  4620              MOV      r0,r4
000034  f7fffffe          BL       MAP_binarySearch
;;;35     
;;;36     			if( _map->handler[ index ].key == _key )
000038  eb000140          ADD      r1,r0,r0,LSL #1
00003c  f8541021          LDR      r1,[r4,r1,LSL #2]
000040  42a9              CMP      r1,r5
000042  d02a              BEQ      |L1.154|
                  |L1.68|
;;;37     				return;
;;;38     			}
;;;39     
;;;40     		pNextHandler = &_map->handler[ _map->size ];
000044  f8d41180          LDR      r1,[r4,#0x180]
000048  eb010241          ADD      r2,r1,r1,LSL #1
00004c  eb040282          ADD      r2,r4,r2,LSL #2
;;;41     		pHandler = &_map->handler[ _map->size - 1 ];
000050  f1a2030c          SUB      r3,r2,#0xc
;;;42     
;;;43     		for( int i = _map->size; i > index; i-- )
000054  e008              B        |L1.104|
                  |L1.86|
;;;44     			{
;;;45     			*pNextHandler-- = *pHandler--;
000056  461f              MOV      r7,r3
000058  4616              MOV      r6,r2
00005a  e8971180          LDM      r7,{r7,r8,r12}
00005e  e8861180          STM      r6,{r7,r8,r12}
000062  3a0c              SUBS     r2,r2,#0xc
000064  3b0c              SUBS     r3,r3,#0xc
000066  1e49              SUBS     r1,r1,#1
                  |L1.104|
000068  4281              CMP      r1,r0                 ;43
00006a  dcf4              BGT      |L1.86|
                  |L1.108|
;;;46     			}
;;;47     		}
;;;48     
;;;49     	pHandler = &_map->handler[ index ];
00006c  eb000040          ADD      r0,r0,r0,LSL #1
000070  eb040080          ADD      r0,r4,r0,LSL #2
000074  e9c05a00          STRD     r5,r10,[r0,#0]
;;;50     	pHandler->key = _key;
;;;51     	pHandler->function = _function;
;;;52     	pHandler->settings.clearPacket = _pSettings->clearPacket;
000078  f8991000          LDRB     r1,[r9,#0]
00007c  7201              STRB     r1,[r0,#8]
;;;53     	pHandler->settings.preparePacket = _pSettings->preparePacket;
00007e  f8991001          LDRB     r1,[r9,#1]
000082  7241              STRB     r1,[r0,#9]
;;;54     	pHandler->settings.sendPacket = _pSettings->sendPacket;
000084  f8991002          LDRB     r1,[r9,#2]
000088  7281              STRB     r1,[r0,#0xa]
;;;55     	pHandler->settings.usbSetLowPriority = _pSettings->usbSetLowPriority;
00008a  f8991003          LDRB     r1,[r9,#3]
00008e  72c1              STRB     r1,[r0,#0xb]
;;;56     
;;;57     	_map->size++;
000090  f8d40180          LDR      r0,[r4,#0x180]
000094  1c40              ADDS     r0,r0,#1
000096  f8c40180          STR      r0,[r4,#0x180]
                  |L1.154|
;;;58     	}
00009a  e8bd87f0          POP      {r4-r10,pc}
;;;59     
                          ENDP


                          AREA ||i.MAP_binarySearch||, CODE, READONLY, ALIGN=1

                  MAP_binarySearch PROC
;;;59     
;;;60     int MAP_binarySearch(tdMap *_map, tdMapKey _key)
000000  b530              PUSH     {r4,r5,lr}
;;;61     	{
000002  4604              MOV      r4,r0
;;;62     	int first = 0;
;;;63     	int last = _map->size - 1;
000004  f8d00180          LDR      r0,[r0,#0x180]
;;;64     	int mid;
;;;65     
;;;66     	if( _key < _map->handler[ first ].key )
000008  6823              LDR      r3,[r4,#0]
00000a  2200              MOVS     r2,#0                 ;62
00000c  1e40              SUBS     r0,r0,#1
00000e  428b              CMP      r3,r1
000010  d901              BLS      |L2.22|
;;;67     		{
;;;68     		last = first;
000012  4610              MOV      r0,r2
                  |L2.20|
;;;69     		}
;;;70     	else if( _key > _map->handler[ last ].key )
;;;71     		{
;;;72     		last = last;
;;;73     		}
;;;74     	else
;;;75     		{
;;;76     		while( first < last )
;;;77     			{
;;;78     			mid = first + (last - first) / 2;
;;;79     			if(  _key <= _map->handler[ mid ].key )
;;;80     				{
;;;81     				last = mid;
;;;82     				}
;;;83     			else
;;;84     				{
;;;85     				first = mid + 1;
;;;86     				}
;;;87     			}
;;;88     		}
;;;89     	return last;
;;;90     	}
000014  bd30              POP      {r4,r5,pc}
                  |L2.22|
000016  eb000340          ADD      r3,r0,r0,LSL #1       ;70
00001a  f8543023          LDR      r3,[r4,r3,LSL #2]     ;70
00001e  428b              CMP      r3,r1                 ;70
000020  d3f8              BCC      |L2.20|
000022  e00d              B        |L2.64|
                  |L2.36|
000024  1a83              SUBS     r3,r0,r2              ;78
000026  eb0373d3          ADD      r3,r3,r3,LSR #31      ;78
00002a  eb020363          ADD      r3,r2,r3,ASR #1       ;78
00002e  eb030543          ADD      r5,r3,r3,LSL #1       ;79
000032  f8545025          LDR      r5,[r4,r5,LSL #2]     ;79
000036  428d              CMP      r5,r1                 ;79
000038  d301              BCC      |L2.62|
00003a  4618              MOV      r0,r3                 ;81
00003c  e000              B        |L2.64|
                  |L2.62|
00003e  1c5a              ADDS     r2,r3,#1              ;85
                  |L2.64|
000040  4282              CMP      r2,r0                 ;76
000042  dbef              BLT      |L2.36|
000044  bd30              POP      {r4,r5,pc}
;;;91     
                          ENDP


                          AREA ||i.MAP_getElement||, CODE, READONLY, ALIGN=1

                  MAP_getElement PROC
;;;91     
;;;92     void MAP_getElement(tdMapKey _key, tdMapHandler *_handler, tdMap *_map)
000000  b530              PUSH     {r4,r5,lr}
;;;93     	{
000002  460d              MOV      r5,r1
;;;94     	int index = MAP_binarySearch( _map, _key);
000004  4601              MOV      r1,r0
000006  4614              MOV      r4,r2                 ;93
000008  4610              MOV      r0,r2
00000a  f7fffffe          BL       MAP_binarySearch
;;;95     	*_handler = _map->handler[ index ];
00000e  eb000040          ADD      r0,r0,r0,LSL #1
000012  eb040080          ADD      r0,r4,r0,LSL #2
000016  c807              LDM      r0,{r0-r2}
000018  e8850007          STM      r5,{r0-r2}
;;;96     	}
00001c  bd30              POP      {r4,r5,pc}
                          ENDP


                          AREA ||i.MAP_init||, CODE, READONLY, ALIGN=1

                  MAP_init PROC
;;;2      
;;;3      void MAP_init(tdMap *_map)
000000  2100              MOVS     r1,#0
;;;4      	{
;;;5      	_map->size = 0;
000002  f8c01180          STR      r1,[r0,#0x180]
;;;6      	}
000006  4770              BX       lr
;;;7      
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\Src\\core\\map.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_map_c_MAP_init____REV16|
#line 129 "..\\..\\Drivers\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_map_c_MAP_init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_map_c_MAP_init____REVSH|
#line 144
|__asm___5_map_c_MAP_init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
