; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o"bhd2 configuration\system_stm32f2xx.o" --asm_dir=.\list\ --list_dir=.\list\ --depend="bhd2 configuration\system_stm32f2xx.d" --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\..\Drivers\CMSIS\Device\ST\STM32F2xx\Include -I..\..\Drivers\CMSIS\Include -I..\..\Middlewares\ST\STM32_USB_Device_Library\Class\CDC\Inc -I..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc -I..\..\Drivers\STM32F2xx_HAL_Driver\Inc -I..\..\Inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_HAL_DRIVER -DSTM32F215xx --omf_browse="bhd2 configuration\system_stm32f2xx.crf" ..\..\Drivers\CMSIS\Device\ST\STM32F2xx\Source\Templates\system_stm32f2xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;216      */
;;;217    void SystemCoreClockUpdate(void)
000000  b570              PUSH     {r4-r6,lr}
;;;218    {
;;;219      uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
;;;220      
;;;221      /* Get SYSCLK source -------------------------------------------------------*/
;;;222      tmp = RCC->CFGR & RCC_CFGR_SWS;
000002  4c1a              LDR      r4,|L1.108|
000004  6820              LDR      r0,[r4,#0]
;;;223    
;;;224      switch (tmp)
;;;225      {
;;;226        case 0x00:  /* HSI used as system clock source */
;;;227          SystemCoreClock = HSI_VALUE;
000006  4a1a              LDR      r2,|L1.112|
000008  f010010c          ANDS     r1,r0,#0xc            ;222
00000c  4819              LDR      r0,|L1.116|
00000e  d004              BEQ      |L1.26|
;;;228          break;
;;;229        case 0x04:  /* HSE used as system clock source */
;;;230          SystemCoreClock = HSE_VALUE;
000010  1055              ASRS     r5,r2,#1
000012  2904              CMP      r1,#4                 ;224
000014  d003              BEQ      |L1.30|
000016  2908              CMP      r1,#8                 ;224
000018  d003              BEQ      |L1.34|
                  |L1.26|
00001a  6002              STR      r2,[r0,#0]            ;228  ; SystemCoreClock
00001c  e01b              B        |L1.86|
                  |L1.30|
;;;231          break;
00001e  6005              STR      r5,[r0,#0]  ; SystemCoreClock
000020  e019              B        |L1.86|
                  |L1.34|
;;;232        case 0x08:  /* PLL used as system clock source */
;;;233    
;;;234          /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
;;;235             SYSCLK = PLL_VCO / PLL_P
;;;236             */    
;;;237          pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
000022  4912              LDR      r1,|L1.108|
000024  1f09              SUBS     r1,r1,#4
000026  680b              LDR      r3,[r1,#0]
000028  f3c35680          UBFX     r6,r3,#22,#1
;;;238          pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
00002c  680b              LDR      r3,[r1,#0]
00002e  f003033f          AND      r3,r3,#0x3f
;;;239          
;;;240          if (pllsource != 0)
000032  b116              CBZ      r6,|L1.58|
;;;241          {
;;;242            /* HSE used as PLL clock source */
;;;243            pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
000034  fbb5f2f3          UDIV     r2,r5,r3
000038  e001              B        |L1.62|
                  |L1.58|
;;;244          }
;;;245          else
;;;246          {
;;;247            /* HSI used as PLL clock source */
;;;248            pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
00003a  fbb2f2f3          UDIV     r2,r2,r3
                  |L1.62|
00003e  680b              LDR      r3,[r1,#0]
;;;249          }
;;;250    
;;;251          pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
000040  6809              LDR      r1,[r1,#0]
000042  f3c31388          UBFX     r3,r3,#6,#9           ;248
000046  435a              MULS     r2,r3,r2              ;248
000048  f3c14101          UBFX     r1,r1,#16,#2
00004c  1c49              ADDS     r1,r1,#1
00004e  0049              LSLS     r1,r1,#1
;;;252          SystemCoreClock = pllvco/pllp;
000050  fbb2f1f1          UDIV     r1,r2,r1
000054  6001              STR      r1,[r0,#0]  ; SystemCoreClock
                  |L1.86|
;;;253          break;
;;;254        default:
;;;255          SystemCoreClock = HSI_VALUE;
;;;256          break;
;;;257      }
;;;258      /* Compute HCLK frequency --------------------------------------------------*/
;;;259      /* Get HCLK prescaler */
;;;260      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
000056  6821              LDR      r1,[r4,#0]
000058  4a06              LDR      r2,|L1.116|
00005a  f3c11103          UBFX     r1,r1,#4,#4
00005e  1d12              ADDS     r2,r2,#4
000060  5c51              LDRB     r1,[r2,r1]
;;;261      /* HCLK frequency */
;;;262      SystemCoreClock >>= tmp;
000062  6802              LDR      r2,[r0,#0]  ; SystemCoreClock
000064  40ca              LSRS     r2,r2,r1
000066  6002              STR      r2,[r0,#0]  ; SystemCoreClock
;;;263    }
000068  bd70              POP      {r4-r6,pc}
;;;264    
                          ENDP

00006a  0000              DCW      0x0000
                  |L1.108|
                          DCD      0x40023808
                  |L1.112|
                          DCD      0x00f42400
                  |L1.116|
                          DCD      ||.data||

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;147      */
;;;148    void SystemInit(void)
000000  480d              LDR      r0,|L2.56|
;;;149    {
;;;150      /* Reset the RCC clock configuration to the default reset state ------------*/
;;;151      /* Set HSION bit */
;;;152      RCC->CR |= (uint32_t)0x00000001;
000002  6801              LDR      r1,[r0,#0]
000004  f0410101          ORR      r1,r1,#1
000008  6001              STR      r1,[r0,#0]
;;;153    
;;;154      /* Reset CFGR register */
;;;155      RCC->CFGR = 0x00000000;
00000a  4a0b              LDR      r2,|L2.56|
00000c  2100              MOVS     r1,#0
00000e  3208              ADDS     r2,r2,#8
000010  6011              STR      r1,[r2,#0]
;;;156    
;;;157      /* Reset HSEON, CSSON and PLLON bits */
;;;158      RCC->CR &= (uint32_t)0xFEF6FFFF;
000012  6802              LDR      r2,[r0,#0]
000014  4b09              LDR      r3,|L2.60|
000016  401a              ANDS     r2,r2,r3
000018  6002              STR      r2,[r0,#0]
;;;159    
;;;160      /* Reset PLLCFGR register */
;;;161      RCC->PLLCFGR = 0x24003010;
00001a  1d03              ADDS     r3,r0,#4
00001c  4a08              LDR      r2,|L2.64|
00001e  601a              STR      r2,[r3,#0]
;;;162    
;;;163      /* Reset HSEBYP bit */
;;;164      RCC->CR &= (uint32_t)0xFFFBFFFF;
000020  6802              LDR      r2,[r0,#0]
000022  f4222280          BIC      r2,r2,#0x40000
000026  6002              STR      r2,[r0,#0]
;;;165    
;;;166      /* Disable all interrupts */
;;;167      RCC->CIR = 0x00000000;
000028  4803              LDR      r0,|L2.56|
00002a  300c              ADDS     r0,r0,#0xc
00002c  6001              STR      r1,[r0,#0]
;;;168    
;;;169    #ifdef DATA_IN_ExtSRAM
;;;170      SystemInit_ExtMemCtl(); 
;;;171    #endif /* DATA_IN_ExtSRAM */
;;;172    
;;;173      /* Configure the Vector Table location add offset address ------------------*/
;;;174    #ifdef VECT_TAB_SRAM
;;;175      SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
;;;176    #else
;;;177      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
00002e  4905              LDR      r1,|L2.68|
000030  0658              LSLS     r0,r3,#25
000032  6008              STR      r0,[r1,#0]
;;;178    #endif
;;;179    }
000034  4770              BX       lr
;;;180    
                          ENDP

000036  0000              DCW      0x0000
                  |L2.56|
                          DCD      0x40023800
                  |L2.60|
                          DCD      0xfef6ffff
                  |L2.64|
                          DCD      0x24003010
                  |L2.68|
                          DCD      0xe000ed08

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x00b71b00
                  AHBPrescTable
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  00000000          DCB      0x00,0x00,0x00,0x00
00000c  01020304          DCB      0x01,0x02,0x03,0x04
000010  06070809          DCB      0x06,0x07,0x08,0x09

;*** Start embedded assembler ***

#line 1 "..\\..\\Drivers\\CMSIS\\Device\\ST\\STM32F2xx\\Source\\Templates\\system_stm32f2xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f2xx_c_5d646a67____REV16|
#line 129 "..\\..\\Drivers\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_system_stm32f2xx_c_5d646a67____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f2xx_c_5d646a67____REVSH|
#line 144
|__asm___18_system_stm32f2xx_c_5d646a67____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
