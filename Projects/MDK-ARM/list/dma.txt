; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o"bhd2 configuration\dma.o" --asm_dir=.\list\ --list_dir=.\list\ --depend="bhd2 configuration\dma.d" --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\..\Drivers\CMSIS\Device\ST\STM32F2xx\Include -I..\..\Drivers\CMSIS\Include -I..\..\Middlewares\ST\STM32_USB_Device_Library\Class\CDC\Inc -I..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc -I..\..\Drivers\STM32F2xx_HAL_Driver\Inc -I..\..\Inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_HAL_DRIVER -DSTM32F215xx --omf_browse="bhd2 configuration\dma.crf" ..\..\Src\dma.c]
                          THUMB

                          AREA ||i.MX_DMA_Init||, CODE, READONLY, ALIGN=2

                  MX_DMA_Init PROC
;;;58       */
;;;59     void MX_DMA_Init(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;60     {
;;;61       /* DMA controller clock enable */
;;;62       __DMA1_CLK_ENABLE();
000004  4829              LDR      r0,|L1.172|
000006  6801              LDR      r1,[r0,#0]
000008  f4411100          ORR      r1,r1,#0x200000
00000c  6001              STR      r1,[r0,#0]
;;;63       __DMA2_CLK_ENABLE();
00000e  6801              LDR      r1,[r0,#0]
000010  f4410180          ORR      r1,r1,#0x400000
000014  6001              STR      r1,[r0,#0]
;;;64     
;;;65       /* Configure DMA request hdma_memtomem_dma2_stream0 on DMA2_Stream0 */
;;;66       hdma_memtomem_dma2_stream0.Instance = DMA2_Stream0;
000016  4827              LDR      r0,|L1.180|
000018  4925              LDR      r1,|L1.176|
;;;67       hdma_memtomem_dma2_stream0.Init.Channel = DMA_CHANNEL_0;
;;;68       hdma_memtomem_dma2_stream0.Init.Direction = DMA_MEMORY_TO_MEMORY;
00001a  2580              MOVS     r5,#0x80
00001c  2400              MOVS     r4,#0                 ;67
00001e  e8800032          STM      r0,{r1,r4,r5}
;;;69       hdma_memtomem_dma2_stream0.Init.PeriphInc = DMA_PINC_DISABLE;
;;;70       hdma_memtomem_dma2_stream0.Init.MemInc = DMA_MINC_DISABLE;
000022  60c4              STR      r4,[r0,#0xc]  ; hdma_memtomem_dma2_stream0
;;;71       hdma_memtomem_dma2_stream0.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
000024  6104              STR      r4,[r0,#0x10]  ; hdma_memtomem_dma2_stream0
;;;72       hdma_memtomem_dma2_stream0.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
000026  6144              STR      r4,[r0,#0x14]  ; hdma_memtomem_dma2_stream0
;;;73       hdma_memtomem_dma2_stream0.Init.Mode = DMA_NORMAL;
;;;74       hdma_memtomem_dma2_stream0.Init.Priority = DMA_PRIORITY_HIGH;
;;;75       hdma_memtomem_dma2_stream0.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
000028  f100011c          ADD      r1,r0,#0x1c
00002c  02ae              LSLS     r6,r5,#10             ;74
00002e  2704              MOVS     r7,#4
000030  6184              STR      r4,[r0,#0x18]  ; hdma_memtomem_dma2_stream0
000032  e88100d0          STM      r1,{r4,r6,r7}
;;;76       hdma_memtomem_dma2_stream0.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_1QUARTERFULL;
;;;77       hdma_memtomem_dma2_stream0.Init.MemBurst = DMA_MBURST_SINGLE;
000036  6284              STR      r4,[r0,#0x28]  ; hdma_memtomem_dma2_stream0
;;;78       hdma_memtomem_dma2_stream0.Init.PeriphBurst = DMA_PBURST_SINGLE;
000038  62c4              STR      r4,[r0,#0x2c]  ; hdma_memtomem_dma2_stream0
;;;79       HAL_DMA_Init(&hdma_memtomem_dma2_stream0);
00003a  6304              STR      r4,[r0,#0x30]  ; hdma_memtomem_dma2_stream0
00003c  f7fffffe          BL       HAL_DMA_Init
;;;80     
;;;81       /* Configure DMA request hdma_memtomem_dma2_stream1 on DMA2_Stream1 */
;;;82       hdma_memtomem_dma2_stream1.Instance = DMA2_Stream1;
000040  481c              LDR      r0,|L1.180|
000042  491b              LDR      r1,|L1.176|
000044  3050              ADDS     r0,r0,#0x50
000046  3118              ADDS     r1,r1,#0x18
000048  e8800032          STM      r0,{r1,r4,r5}
;;;83       hdma_memtomem_dma2_stream1.Init.Channel = DMA_CHANNEL_0;
;;;84       hdma_memtomem_dma2_stream1.Init.Direction = DMA_MEMORY_TO_MEMORY;
;;;85       hdma_memtomem_dma2_stream1.Init.PeriphInc = DMA_PINC_DISABLE;
;;;86       hdma_memtomem_dma2_stream1.Init.MemInc = DMA_MINC_DISABLE;
00004c  60c4              STR      r4,[r0,#0xc]  ; hdma_memtomem_dma2_stream1
;;;87       hdma_memtomem_dma2_stream1.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
00004e  6104              STR      r4,[r0,#0x10]  ; hdma_memtomem_dma2_stream1
;;;88       hdma_memtomem_dma2_stream1.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
000050  6144              STR      r4,[r0,#0x14]  ; hdma_memtomem_dma2_stream1
000052  f100011c          ADD      r1,r0,#0x1c
000056  6184              STR      r4,[r0,#0x18]  ; hdma_memtomem_dma2_stream1
000058  e88100d0          STM      r1,{r4,r6,r7}
;;;89       hdma_memtomem_dma2_stream1.Init.Mode = DMA_NORMAL;
;;;90       hdma_memtomem_dma2_stream1.Init.Priority = DMA_PRIORITY_HIGH;
;;;91       hdma_memtomem_dma2_stream1.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
;;;92       hdma_memtomem_dma2_stream1.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_1QUARTERFULL;
;;;93       hdma_memtomem_dma2_stream1.Init.MemBurst = DMA_MBURST_SINGLE;
00005c  6284              STR      r4,[r0,#0x28]  ; hdma_memtomem_dma2_stream1
;;;94       hdma_memtomem_dma2_stream1.Init.PeriphBurst = DMA_PBURST_SINGLE;
00005e  62c4              STR      r4,[r0,#0x2c]  ; hdma_memtomem_dma2_stream1
;;;95       HAL_DMA_Init(&hdma_memtomem_dma2_stream1);
000060  6304              STR      r4,[r0,#0x30]  ; hdma_memtomem_dma2_stream1
000062  f7fffffe          BL       HAL_DMA_Init
;;;96     
;;;97       /* DMA interrupt init */
;;;98       /* Sets the priority grouping field */
;;;99     //  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_2);
;;;100      HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
000066  2200              MOVS     r2,#0
000068  4611              MOV      r1,r2
00006a  203a              MOVS     r0,#0x3a
00006c  f7fffffe          BL       HAL_NVIC_SetPriority
;;;101      HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
000070  203a              MOVS     r0,#0x3a
000072  f7fffffe          BL       HAL_NVIC_EnableIRQ
;;;102      /* Sets the priority grouping field */
;;;103      //HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_2);
;;;104      HAL_NVIC_SetPriority(DMA2_Stream3_IRQn, 0, 0);
000076  2200              MOVS     r2,#0
000078  4611              MOV      r1,r2
00007a  203b              MOVS     r0,#0x3b
00007c  f7fffffe          BL       HAL_NVIC_SetPriority
;;;105      HAL_NVIC_EnableIRQ(DMA2_Stream3_IRQn);
000080  203b              MOVS     r0,#0x3b
000082  f7fffffe          BL       HAL_NVIC_EnableIRQ
;;;106      /* Sets the priority grouping field */
;;;107      //HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_2);
;;;108      HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
000086  2200              MOVS     r2,#0
000088  4611              MOV      r1,r2
00008a  200b              MOVS     r0,#0xb
00008c  f7fffffe          BL       HAL_NVIC_SetPriority
;;;109      HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
000090  200b              MOVS     r0,#0xb
000092  f7fffffe          BL       HAL_NVIC_EnableIRQ
;;;110      /* Sets the priority grouping field */
;;;111      //HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_2);
;;;112      HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
000096  2200              MOVS     r2,#0
000098  4611              MOV      r1,r2
00009a  2010              MOVS     r0,#0x10
00009c  f7fffffe          BL       HAL_NVIC_SetPriority
;;;113      HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
0000a0  e8bd41f0          POP      {r4-r8,lr}
0000a4  2010              MOVS     r0,#0x10
0000a6  f7ffbffe          B.W      HAL_NVIC_EnableIRQ
;;;114    
;;;115    }
;;;116    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L1.172|
                          DCD      0x40023830
                  |L1.176|
                          DCD      0x40026410
                  |L1.180|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  hdma_memtomem_dma2_stream0
                          %        80
                  hdma_memtomem_dma2_stream1
                          %        80

;*** Start embedded assembler ***

#line 1 "..\\..\\Src\\dma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_dma_c_c03d6034____REV16|
#line 129 "..\\..\\Drivers\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_dma_c_c03d6034____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_dma_c_c03d6034____REVSH|
#line 144
|__asm___5_dma_c_c03d6034____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
