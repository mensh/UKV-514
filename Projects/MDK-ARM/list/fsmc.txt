; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o"bhd2 configuration\fsmc.o" --asm_dir=.\list\ --list_dir=.\list\ --depend="bhd2 configuration\fsmc.d" --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\..\Drivers\CMSIS\Device\ST\STM32F2xx\Include -I..\..\Drivers\CMSIS\Include -I..\..\Middlewares\ST\STM32_USB_Device_Library\Class\CDC\Inc -I..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc -I..\..\Drivers\STM32F2xx_HAL_Driver\Inc -I..\..\Inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_HAL_DRIVER -DSTM32F215xx --omf_browse="bhd2 configuration\fsmc.crf" ..\..\Src\fsmc.c]
                          THUMB

                          AREA ||i.HAL_FSMC_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_FSMC_MspInit PROC
;;;106    
;;;107    static void HAL_FSMC_MspInit(void){
000000  b570              PUSH     {r4-r6,lr}
;;;108      GPIO_InitTypeDef GPIO_InitStruct;
;;;109      if (FSMC_Initialized) {
000002  4819              LDR      r0,|L1.104|
000004  b086              SUB      sp,sp,#0x18           ;107
000006  6801              LDR      r1,[r0,#0]            ;107  ; FSMC_Initialized
000008  2900              CMP      r1,#0                 ;107
00000a  d12a              BNE      |L1.98|
;;;110        return;
;;;111      }
;;;112      FSMC_Initialized = 1;
00000c  2101              MOVS     r1,#1
;;;113      /* Peripheral clock enable */
;;;114      __FSMC_CLK_ENABLE();
00000e  6001              STR      r1,[r0,#0]  ; FSMC_Initialized
000010  4816              LDR      r0,|L1.108|
000012  6801              LDR      r1,[r0,#0]
000014  f0410101          ORR      r1,r1,#1
000018  6001              STR      r1,[r0,#0]
;;;115    
;;;116      /** FSMC GPIO Configuration
;;;117      PE7   ------> FSMC_D4
;;;118      PE8   ------> FSMC_D5
;;;119      PE9   ------> FSMC_D6
;;;120      PE10   ------> FSMC_D7
;;;121      PD11   ------> FSMC_CLE
;;;122      PD12   ------> FSMC_ALE
;;;123      PD14   ------> FSMC_D0
;;;124      PD15   ------> FSMC_D1
;;;125      PG6   ------> FSMC_INT2
;;;126      PG7   ------> FSMC_INT3
;;;127      PD0   ------> FSMC_D2
;;;128      PD1   ------> FSMC_D3
;;;129      PD4   ------> FSMC_NOE
;;;130      PD5   ------> FSMC_NWE
;;;131      PD7   ------> FSMC_NCE2
;;;132      PG9   ------> FSMC_NCE3
;;;133      */
;;;134      /* GPIO_InitStruct */
;;;135      GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10;
00001a  f44f60f0          MOV      r0,#0x780
;;;136      GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
;;;137      GPIO_InitStruct.Pull = GPIO_NOPULL;
00001e  9000              STR      r0,[sp,#0]
000020  2502              MOVS     r5,#2                 ;136
000022  2400              MOVS     r4,#0
000024  e9cd5401          STRD     r5,r4,[sp,#4]
;;;138      GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
;;;139      GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
000028  260c              MOVS     r6,#0xc
;;;140    
;;;141      HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
00002a  e9cd4603          STRD     r4,r6,[sp,#0xc]
00002e  4669              MOV      r1,sp
000030  480f              LDR      r0,|L1.112|
000032  f7fffffe          BL       HAL_GPIO_Init
;;;142    
;;;143      /* GPIO_InitStruct */
;;;144      GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_14|GPIO_PIN_15
000036  f64d00b3          MOV      r0,#0xd8b3
00003a  9000              STR      r0,[sp,#0]
00003c  e9cd5401          STRD     r5,r4,[sp,#4]
;;;145                              |GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
;;;146                              |GPIO_PIN_7;
;;;147      GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
;;;148      GPIO_InitStruct.Pull = GPIO_NOPULL;
;;;149      GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
;;;150      GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
;;;151    
;;;152      HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
000040  e9cd4603          STRD     r4,r6,[sp,#0xc]
000044  4669              MOV      r1,sp
000046  480b              LDR      r0,|L1.116|
000048  f7fffffe          BL       HAL_GPIO_Init
;;;153    
;;;154      /* GPIO_InitStruct */
;;;155      GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_9;
00004c  f44f7030          MOV      r0,#0x2c0
000050  9000              STR      r0,[sp,#0]
000052  e9cd5401          STRD     r5,r4,[sp,#4]
;;;156      GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
;;;157      GPIO_InitStruct.Pull = GPIO_NOPULL;
;;;158      GPIO_InitStruct.Speed = GPIO_SPEED_LOW;
;;;159      GPIO_InitStruct.Alternate = GPIO_AF12_FSMC;
;;;160    
;;;161      HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
000056  e9cd4603          STRD     r4,r6,[sp,#0xc]
00005a  4669              MOV      r1,sp
00005c  4806              LDR      r0,|L1.120|
00005e  f7fffffe          BL       HAL_GPIO_Init
                  |L1.98|
;;;162    
;;;163    }
000062  b006              ADD      sp,sp,#0x18
000064  bd70              POP      {r4-r6,pc}
;;;164    
                          ENDP

000066  0000              DCW      0x0000
                  |L1.104|
                          DCD      ||.data||
                  |L1.108|
                          DCD      0x40023838
                  |L1.112|
                          DCD      0x40021000
                  |L1.116|
                          DCD      0x40020c00
                  |L1.120|
                          DCD      0x40021800

                          AREA ||i.HAL_NAND_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_NAND_MspDeInit PROC
;;;207    
;;;208    void HAL_NAND_MspDeInit(NAND_HandleTypeDef* hnand){
000000  480e              LDR      r0,|L2.60|
000002  b510              PUSH     {r4,lr}
000004  6841              LDR      r1,[r0,#4]  ; FSMC_DeInitialized
000006  2900              CMP      r1,#0
000008  d117              BNE      |L2.58|
00000a  2101              MOVS     r1,#1
00000c  6041              STR      r1,[r0,#4]  ; FSMC_DeInitialized
00000e  480c              LDR      r0,|L2.64|
000010  6801              LDR      r1,[r0,#0]
000012  f0210101          BIC      r1,r1,#1
000016  6001              STR      r1,[r0,#0]
000018  f44f61f0          MOV      r1,#0x780
00001c  4809              LDR      r0,|L2.68|
00001e  f7fffffe          BL       HAL_GPIO_DeInit
000022  f64d01b3          MOV      r1,#0xd8b3
000026  4808              LDR      r0,|L2.72|
000028  f7fffffe          BL       HAL_GPIO_DeInit
00002c  e8bd4010          POP      {r4,lr}
000030  f44f7130          MOV      r1,#0x2c0
000034  4805              LDR      r0,|L2.76|
000036  f7ffbffe          B.W      HAL_GPIO_DeInit
                  |L2.58|
;;;209      HAL_FSMC_MspDeInit();
;;;210    }
00003a  bd10              POP      {r4,pc}
;;;211    /**
                          ENDP

                  |L2.60|
                          DCD      ||.data||
                  |L2.64|
                          DCD      0x40023838
                  |L2.68|
                          DCD      0x40021000
                  |L2.72|
                          DCD      0x40020c00
                  |L2.76|
                          DCD      0x40021800

                          AREA ||i.HAL_NAND_MspInit||, CODE, READONLY, ALIGN=1

                  HAL_NAND_MspInit PROC
;;;164    
;;;165    void HAL_NAND_MspInit(NAND_HandleTypeDef* hnand){
000000  f7ffbffe          B.W      HAL_FSMC_MspInit
;;;166      HAL_FSMC_MspInit();
;;;167    }
;;;168    
                          ENDP


                          AREA ||i.MX_FSMC_Init||, CODE, READONLY, ALIGN=2

                  MX_FSMC_Init PROC
;;;47     /* FSMC initialization function */
;;;48     void MX_FSMC_Init(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;49     {
;;;50       FSMC_NAND_PCC_TimingTypeDef ComSpaceTiming;
;;;51       FSMC_NAND_PCC_TimingTypeDef AttSpaceTiming;
;;;52     
;;;53       /** Perform the NAND1 memory initialization sequence
;;;54       */
;;;55       hnand1.Instance = FSMC_NAND_DEVICE;
000002  481b              LDR      r0,|L4.112|
000004  b089              SUB      sp,sp,#0x24           ;49
;;;56       /* hnand1.Init */
;;;57       hnand1.Init.NandBank = FSMC_NAND_BANK2;
;;;58       hnand1.Init.Waitfeature = FSMC_NAND_PCC_WAIT_FEATURE_ENABLE;
000006  2702              MOVS     r7,#2
;;;59       hnand1.Init.MemoryDataWidth = FSMC_NAND_PCC_MEM_BUS_WIDTH_8;
000008  2500              MOVS     r5,#0
00000a  e9c07502          STRD     r7,r5,[r0,#8]
;;;60       hnand1.Init.EccComputation = FSMC_NAND_ECC_DISABLE;
;;;61       hnand1.Init.ECCPageSize = FSMC_NAND_ECC_PAGE_SIZE_256BYTE;
00000e  6105              STR      r5,[r0,#0x10]  ; hnand1
;;;62       hnand1.Init.TCLRSetupTime = 0;
000010  6145              STR      r5,[r0,#0x14]  ; hnand1
;;;63       hnand1.Init.TARSetupTime = 0;
000012  6185              STR      r5,[r0,#0x18]  ; hnand1
000014  4e15              LDR      r6,|L4.108|
000016  2110              MOVS     r1,#0x10              ;57
000018  61c5              STR      r5,[r0,#0x1c]  ; hnand1
00001a  e9c06100          STRD     r6,r1,[r0,#0]
;;;64       /* hnand1.Info */
;;;65       /* ComSpaceTiming */
;;;66       ComSpaceTiming.SetupTime = 255;
00001e  24ff              MOVS     r4,#0xff
;;;67       ComSpaceTiming.WaitSetupTime = 255;
000020  9400              STR      r4,[sp,#0]
;;;68       ComSpaceTiming.HoldSetupTime = 255;
000022  9401              STR      r4,[sp,#4]
;;;69       ComSpaceTiming.HiZSetupTime = 255;
000024  9402              STR      r4,[sp,#8]
;;;70       /* AttSpaceTiming */
;;;71       AttSpaceTiming.SetupTime = 255;
000026  9403              STR      r4,[sp,#0xc]
;;;72       AttSpaceTiming.WaitSetupTime = 255;
000028  9404              STR      r4,[sp,#0x10]
;;;73       AttSpaceTiming.HoldSetupTime = 255;
00002a  9405              STR      r4,[sp,#0x14]
;;;74       AttSpaceTiming.HiZSetupTime = 255;
00002c  9406              STR      r4,[sp,#0x18]
;;;75     
;;;76       HAL_NAND_Init(&hnand1, &ComSpaceTiming, &AttSpaceTiming);
00002e  aa04              ADD      r2,sp,#0x10
000030  4669              MOV      r1,sp
000032  9407              STR      r4,[sp,#0x1c]
000034  f7fffffe          BL       HAL_NAND_Init
;;;77     
;;;78       /** Perform the NAND2 memory initialization sequence
;;;79       */
;;;80       hnand2.Instance = FSMC_NAND_DEVICE;
000038  480d              LDR      r0,|L4.112|
;;;81       /* hnand2.Init */
;;;82       hnand2.Init.NandBank = FSMC_NAND_BANK3;
00003a  1c61              ADDS     r1,r4,#1
00003c  3038              ADDS     r0,r0,#0x38           ;80
;;;83       hnand2.Init.Waitfeature = FSMC_NAND_PCC_WAIT_FEATURE_ENABLE;
;;;84       hnand2.Init.MemoryDataWidth = FSMC_NAND_PCC_MEM_BUS_WIDTH_8;
;;;85       hnand2.Init.EccComputation = FSMC_NAND_ECC_DISABLE;
;;;86       hnand2.Init.ECCPageSize = FSMC_NAND_ECC_PAGE_SIZE_256BYTE;
;;;87       hnand2.Init.TCLRSetupTime = 0;
;;;88       hnand2.Init.TARSetupTime = 0;
;;;89       /* hnand2.Info */
;;;90       /* ComSpaceTiming */
;;;91       ComSpaceTiming.SetupTime = 255;
;;;92       ComSpaceTiming.WaitSetupTime = 255;
;;;93       ComSpaceTiming.HoldSetupTime = 255;
;;;94       ComSpaceTiming.HiZSetupTime = 255;
;;;95       /* AttSpaceTiming */
;;;96       AttSpaceTiming.SetupTime = 255;
;;;97       AttSpaceTiming.WaitSetupTime = 255;
;;;98       AttSpaceTiming.HoldSetupTime = 255;
;;;99       AttSpaceTiming.HiZSetupTime = 255;
;;;100    
;;;101      HAL_NAND_Init(&hnand2, &ComSpaceTiming, &AttSpaceTiming);
00003e  aa04              ADD      r2,sp,#0x10
000040  e9c07502          STRD     r7,r5,[r0,#8]         ;82
000044  6105              STR      r5,[r0,#0x10]         ;86  ; hnand2
000046  6145              STR      r5,[r0,#0x14]         ;87  ; hnand2
000048  6185              STR      r5,[r0,#0x18]         ;88  ; hnand2
00004a  61c5              STR      r5,[r0,#0x1c]         ;88  ; hnand2
00004c  e9c06100          STRD     r6,r1,[r0,#0]         ;88
000050  9400              STR      r4,[sp,#0]            ;92
000052  9401              STR      r4,[sp,#4]            ;93
000054  9402              STR      r4,[sp,#8]            ;94
000056  9403              STR      r4,[sp,#0xc]          ;96
000058  9404              STR      r4,[sp,#0x10]         ;97
00005a  9405              STR      r4,[sp,#0x14]         ;98
00005c  9406              STR      r4,[sp,#0x18]         ;99
00005e  4669              MOV      r1,sp
000060  9407              STR      r4,[sp,#0x1c]
000062  f7fffffe          BL       HAL_NAND_Init
;;;102    
;;;103    }
000066  b009              ADD      sp,sp,#0x24
000068  bdf0              POP      {r4-r7,pc}
;;;104    
                          ENDP

00006a  0000              DCW      0x0000
                  |L4.108|
                          DCD      0xa0000060
                  |L4.112|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  hnand1
                          %        56
                  hnand2
                          %        56

                          AREA ||.data||, DATA, ALIGN=2

                  FSMC_Initialized
                          DCD      0x00000000
                  FSMC_DeInitialized
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\Src\\fsmc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_fsmc_c_780bbf4a____REV16|
#line 129 "..\\..\\Drivers\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_fsmc_c_780bbf4a____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_fsmc_c_780bbf4a____REVSH|
#line 144
|__asm___6_fsmc_c_780bbf4a____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
