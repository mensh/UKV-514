; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o"bhd2 configuration\usbd_cdc_if.o" --asm_dir=.\list\ --list_dir=.\list\ --depend="bhd2 configuration\usbd_cdc_if.d" --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\..\Drivers\CMSIS\Device\ST\STM32F2xx\Include -I..\..\Drivers\CMSIS\Include -I..\..\Middlewares\ST\STM32_USB_Device_Library\Class\CDC\Inc -I..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc -I..\..\Drivers\STM32F2xx_HAL_Driver\Inc -I..\..\Inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_HAL_DRIVER -DSTM32F215xx --omf_browse="bhd2 configuration\usbd_cdc_if.crf" ..\..\Src\usbd_cdc_if.c]
                          THUMB

                          AREA ||i.CDC_Control_HS||, CODE, READONLY, ALIGN=1

                  CDC_Control_HS PROC
;;;165      */
;;;166    static int8_t CDC_Control_HS  (uint8_t cmd, uint8_t* pbuf, uint16_t length)
000000  2000              MOVS     r0,#0
;;;167    {
;;;168      /* USER CODE BEGIN 11 */
;;;169      switch (cmd)
;;;170      {
;;;171      case CDC_SEND_ENCAPSULATED_COMMAND:
;;;172    
;;;173        break;
;;;174    
;;;175      case CDC_GET_ENCAPSULATED_RESPONSE:
;;;176    
;;;177        break;
;;;178    
;;;179      case CDC_SET_COMM_FEATURE:
;;;180    
;;;181        break;
;;;182    
;;;183      case CDC_GET_COMM_FEATURE:
;;;184    
;;;185        break;
;;;186    
;;;187      case CDC_CLEAR_COMM_FEATURE:
;;;188    
;;;189        break;
;;;190    
;;;191      /*******************************************************************************/
;;;192      /* Line Coding Structure                                                       */
;;;193      /*-----------------------------------------------------------------------------*/
;;;194      /* Offset | Field       | Size | Value  | Description                          */
;;;195      /* 0      | dwDTERate   |   4  | Number |Data terminal rate, in bits per second*/
;;;196      /* 4      | bCharFormat |   1  | Number | Stop bits                            */
;;;197      /*                                        0 - 1 Stop bit                       */
;;;198      /*                                        1 - 1.5 Stop bits                    */
;;;199      /*                                        2 - 2 Stop bits                      */
;;;200      /* 5      | bParityType |  1   | Number | Parity                               */
;;;201      /*                                        0 - None                             */
;;;202      /*                                        1 - Odd                              */
;;;203      /*                                        2 - Even                             */
;;;204      /*                                        3 - Mark                             */
;;;205      /*                                        4 - Space                            */
;;;206      /* 6      | bDataBits  |   1   | Number Data bits (5, 6, 7, 8 or 16).          */
;;;207      /*******************************************************************************/
;;;208      case CDC_SET_LINE_CODING:
;;;209    
;;;210        break;
;;;211    
;;;212      case CDC_GET_LINE_CODING:
;;;213    
;;;214        break;
;;;215    
;;;216      case CDC_SET_CONTROL_LINE_STATE:
;;;217    
;;;218        break;
;;;219    
;;;220      case CDC_SEND_BREAK:
;;;221    
;;;222        break;
;;;223    
;;;224      default:
;;;225        break;
;;;226      }
;;;227    
;;;228      return (USBD_OK);
;;;229      /* USER CODE END 11 */
;;;230    }
000002  4770              BX       lr
;;;231    
                          ENDP


                          AREA ||i.CDC_DeInit_HS||, CODE, READONLY, ALIGN=1

                  CDC_DeInit_HS PROC
;;;150      */
;;;151    static int8_t CDC_DeInit_HS(void)
000000  2000              MOVS     r0,#0
;;;152    {
;;;153      /* USER CODE BEGIN 10 */
;;;154      return (USBD_OK);
;;;155      /* USER CODE END 10 */
;;;156    }
000002  4770              BX       lr
;;;157    
                          ENDP


                          AREA ||i.CDC_Init_HS||, CODE, READONLY, ALIGN=2

                  CDC_Init_HS PROC
;;;132      */
;;;133    static int8_t CDC_Init_HS(void)
000000  b510              PUSH     {r4,lr}
;;;134    {
;;;135      hUsbDevice_1 = &hUsbDeviceHS;
000002  4c07              LDR      r4,|L3.32|
000004  4805              LDR      r0,|L3.28|
;;;136      /* USER CODE BEGIN 9 */
;;;137      /* Set Application Buffers */
;;;138      USBD_CDC_SetTxBuffer(hUsbDevice_1, UserTxBufferHS, 0);
000006  2200              MOVS     r2,#0
000008  4906              LDR      r1,|L3.36|
00000a  6020              STR      r0,[r4,#0]  ; hUsbDevice_1
00000c  f7fffffe          BL       USBD_CDC_SetTxBuffer
;;;139      USBD_CDC_SetRxBuffer(hUsbDevice_1, UserRxBufferHS);
000010  4905              LDR      r1,|L3.40|
000012  6820              LDR      r0,[r4,#0]  ; hUsbDevice_1
000014  f7fffffe          BL       USBD_CDC_SetRxBuffer
;;;140    
;;;141      return (USBD_OK);
000018  2000              MOVS     r0,#0
;;;142      /* USER CODE END 9 */
;;;143    }
00001a  bd10              POP      {r4,pc}
;;;144    
                          ENDP

                  |L3.28|
                          DCD      hUsbDeviceHS
                  |L3.32|
                          DCD      ||area_number.10||
                  |L3.36|
                          DCD      ||.bss||+0x200
                  |L3.40|
                          DCD      ||.bss||

                          AREA ||i.CDC_Receive_HS||, CODE, READONLY, ALIGN=2

                  CDC_Receive_HS PROC
;;;248      */
;;;249    static int8_t CDC_Receive_HS(uint8_t* Buf, uint32_t *Len)
000000  b510              PUSH     {r4,lr}
;;;250    	{
;;;251    	/* USER CODE BEGIN 12 */
;;;252    	PRINT_FUNC;
;;;253    	USB_CORE_requestHandler(Buf, Len);
000002  f7fffffe          BL       USB_CORE_requestHandler
;;;254    	USBD_CDC_ReceivePacket(hUsbDevice_1);
000006  4803              LDR      r0,|L4.20|
000008  6800              LDR      r0,[r0,#0]  ; hUsbDevice_1
00000a  f7fffffe          BL       USBD_CDC_ReceivePacket
;;;255    	return (USBD_OK);
00000e  2000              MOVS     r0,#0
;;;256    
;;;257    	/* USER CODE END 12 */
;;;258    	}
000010  bd10              POP      {r4,pc}
;;;259    /**
                          ENDP

000012  0000              DCW      0x0000
                  |L4.20|
                          DCD      ||area_number.10||

                          AREA ||i.CDC_Transmit_HS||, CODE, READONLY, ALIGN=2

                  CDC_Transmit_HS PROC
;;;269      */
;;;270    uint8_t CDC_Transmit_HS(uint8_t* Buf, uint16_t Len)
000000  b510              PUSH     {r4,lr}
;;;271    	{
;;;272    	uint8_t result = USBD_OK;
;;;273    	/* USER CODE BEGIN 13 */
;;;274    	//PRINT_FUNC;
;;;275    	//PRINT_VAL("Len %d", Len);
;;;276    	USBD_CDC_SetTxBuffer(hUsbDevice_1, Buf, Len);
000002  4c05              LDR      r4,|L5.24|
000004  460a              MOV      r2,r1
000006  4601              MOV      r1,r0
000008  6820              LDR      r0,[r4,#0]  ; hUsbDevice_1
00000a  f7fffffe          BL       USBD_CDC_SetTxBuffer
;;;277    	result = USBD_CDC_TransmitPacket(hUsbDevice_1);
00000e  6820              LDR      r0,[r4,#0]  ; hUsbDevice_1
000010  e8bd4010          POP      {r4,lr}
000014  f7ffbffe          B.W      USBD_CDC_TransmitPacket
;;;278    
;;;279    	/* USER CODE END 13 */
;;;280    	return result;
;;;281    	}
;;;282    /**
                          ENDP

                  |L5.24|
                          DCD      ||area_number.10||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  UserRxBufferHS
                          %        512
                  UserTxBufferHS
                          %        512

                          AREA ||.data||, DATA, ALIGN=2

                  USBD_Interface_fops_HS
                          DCD      CDC_Init_HS
                          DCD      CDC_DeInit_HS
                          DCD      CDC_Control_HS
                          DCD      CDC_Receive_HS

                          AREA ||area_number.10||, DATA, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.data||
                  hUsbDevice_1
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\Src\\usbd_cdc_if.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_usbd_cdc_if_c_cc69dd98____REV16|
#line 129 "..\\..\\Drivers\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_usbd_cdc_if_c_cc69dd98____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_usbd_cdc_if_c_cc69dd98____REVSH|
#line 144
|__asm___13_usbd_cdc_if_c_cc69dd98____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
