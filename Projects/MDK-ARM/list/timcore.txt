; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o"bhd2 configuration\timcore.o" --asm_dir=.\list\ --list_dir=.\list\ --depend="bhd2 configuration\timcore.d" --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\..\Drivers\CMSIS\Device\ST\STM32F2xx\Include -I..\..\Drivers\CMSIS\Include -I..\..\Middlewares\ST\STM32_USB_Device_Library\Class\CDC\Inc -I..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc -I..\..\Drivers\STM32F2xx_HAL_Driver\Inc -I..\..\Inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_HAL_DRIVER -DSTM32F215xx --omf_browse="bhd2 configuration\timcore.crf" ..\..\Src\core\timCore.c]
                          THUMB

                          AREA ||i.HAL_TIM_Base_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_Base_MspDeInit PROC
;;;99     
;;;100    void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef *htim_base)
000000  6800              LDR      r0,[r0,#0]
;;;101    	{
;;;102    	if( htim_base->Instance == TIM7 )
000002  4906              LDR      r1,|L1.28|
000004  4288              CMP      r0,r1
000006  d107              BNE      |L1.24|
;;;103    		{
;;;104    		/* USER CODE BEGIN TIM7_MspDeInit 0 */
;;;105    
;;;106    		/* USER CODE END TIM7_MspDeInit 0 */
;;;107    			/* Peripheral clock disable */
;;;108    		__TIM7_CLK_DISABLE();
000008  4805              LDR      r0,|L1.32|
00000a  6801              LDR      r1,[r0,#0]
00000c  f0210120          BIC      r1,r1,#0x20
000010  6001              STR      r1,[r0,#0]
;;;109    
;;;110    			/* Peripheral interrupt DeInit*/
;;;111    		HAL_NVIC_DisableIRQ(TIM7_IRQn);
000012  2037              MOVS     r0,#0x37
000014  f7ffbffe          B.W      HAL_NVIC_DisableIRQ
                  |L1.24|
;;;112    
;;;113    		/* USER CODE BEGIN TIM7_MspDeInit 1 */
;;;114    
;;;115    		/* USER CODE END TIM7_MspDeInit 1 */
;;;116    		}
;;;117    	}
000018  4770              BX       lr
;;;118    
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      0x40001400
                  |L1.32|
                          DCD      0x40023840

                          AREA ||i.HAL_TIM_Base_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_Base_MspInit PROC
;;;80     
;;;81     void HAL_TIM_Base_MspInit(TIM_HandleTypeDef *htim_base)
000000  b510              PUSH     {r4,lr}
;;;82     	{
;;;83     	if( htim_base->Instance == TIM7 )
000002  6800              LDR      r0,[r0,#0]
000004  4909              LDR      r1,|L2.44|
000006  4288              CMP      r0,r1
000008  d10e              BNE      |L2.40|
;;;84     		{
;;;85     		/* USER CODE BEGIN TIM7_MspInit 0 */
;;;86     
;;;87     		/* USER CODE END TIM7_MspInit 0 */
;;;88     			/* Peripheral clock enable */
;;;89     		__TIM7_CLK_ENABLE();
00000a  4809              LDR      r0,|L2.48|
00000c  6801              LDR      r1,[r0,#0]
00000e  f0410120          ORR      r1,r1,#0x20
000012  6001              STR      r1,[r0,#0]
;;;90     		/* System interrupt init*/
;;;91     
;;;92     		HAL_NVIC_SetPriority(TIM7_IRQn, 3, 0);
000014  2200              MOVS     r2,#0
000016  2103              MOVS     r1,#3
000018  2037              MOVS     r0,#0x37
00001a  f7fffffe          BL       HAL_NVIC_SetPriority
;;;93     		HAL_NVIC_EnableIRQ(TIM7_IRQn);
00001e  e8bd4010          POP      {r4,lr}
000022  2037              MOVS     r0,#0x37
000024  f7ffbffe          B.W      HAL_NVIC_EnableIRQ
                  |L2.40|
;;;94     		/* USER CODE BEGIN TIM7_MspInit 1 */
;;;95     
;;;96     		/* USER CODE END TIM7_MspInit 1 */
;;;97     		}
;;;98     	}
000028  bd10              POP      {r4,pc}
;;;99     
                          ENDP

00002a  0000              DCW      0x0000
                  |L2.44|
                          DCD      0x40001400
                  |L2.48|
                          DCD      0x40023840

                          AREA ||i.HAL_TIM_PWM_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_PWM_MspInit PROC
;;;31     
;;;32     void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
000000  b500              PUSH     {lr}
;;;33     	{
;;;34     	GPIO_InitTypeDef GPIO_InitStruct;
;;;35     	if( htim_pwm->Instance == TIM2 )
000002  6800              LDR      r0,[r0,#0]
000004  b085              SUB      sp,sp,#0x14           ;33
000006  f1b04f80          CMP      r0,#0x40000000
00000a  d112              BNE      |L3.50|
;;;36     		{
;;;37     		/* Peripheral clock enable */
;;;38     		__TIM2_CLK_ENABLE();
00000c  480a              LDR      r0,|L3.56|
00000e  6801              LDR      r1,[r0,#0]
000010  f0410101          ORR      r1,r1,#1
000014  6001              STR      r1,[r0,#0]
;;;39     
;;;40     		/**TIM2 GPIO Configuration
;;;41     		PA2     ------> TIM2_CH3
;;;42     		*/
;;;43     		GPIO_InitStruct.Pin = GPIO_PIN_2;
000016  2004              MOVS     r0,#4
;;;44     		GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000018  9000              STR      r0,[sp,#0]
00001a  2002              MOVS     r0,#2
;;;45     		GPIO_InitStruct.Pull = GPIO_NOPULL;
00001c  9001              STR      r0,[sp,#4]
00001e  2000              MOVS     r0,#0
;;;46     		GPIO_InitStruct.Speed = GPIO_SPEED_HIGH;
000020  9002              STR      r0,[sp,#8]
000022  2003              MOVS     r0,#3
;;;47     		GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
000024  9003              STR      r0,[sp,#0xc]
000026  2001              MOVS     r0,#1
;;;48     		HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000028  9004              STR      r0,[sp,#0x10]
00002a  4669              MOV      r1,sp
00002c  4803              LDR      r0,|L3.60|
00002e  f7fffffe          BL       HAL_GPIO_Init
                  |L3.50|
;;;49     		}
;;;50     	}
000032  b005              ADD      sp,sp,#0x14
000034  bd00              POP      {pc}
;;;51     
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      0x40023840
                  |L3.60|
                          DCD      0x40020000

                          AREA ||i.HAL_TIM_PeriodElapsedCallback||, CODE, READONLY, ALIGN=2

                  HAL_TIM_PeriodElapsedCallback PROC
;;;145    
;;;146    void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
000000  6800              LDR      r0,[r0,#0]
;;;147    	{
;;;148    	if( htim->Instance == TIM7 )
000002  4904              LDR      r1,|L4.20|
000004  4288              CMP      r0,r1
000006  d104              BNE      |L4.18|
;;;149    		{
;;;150    		if( TIM_CORE_tim7Callback != NULL )
000008  4803              LDR      r0,|L4.24|
00000a  6800              LDR      r0,[r0,#0]  ; TIM_CORE_tim7Callback
00000c  2800              CMP      r0,#0
00000e  d000              BEQ      |L4.18|
;;;151    			{
;;;152    			TIM_CORE_tim7Callback();
000010  4700              BX       r0
                  |L4.18|
;;;153    			}
;;;154    		}
;;;155    	}
000012  4770              BX       lr
;;;156    
                          ENDP

                  |L4.20|
                          DCD      0x40001400
                  |L4.24|
                          DCD      ||.data||

                          AREA ||i.MX_TIM2_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM2_Init PROC
;;;8      
;;;9      void MX_TIM2_Init(void)
000000  b530              PUSH     {r4,r5,lr}
;;;10     	{
;;;11     	TIM_OC_InitTypeDef sConfigOC;
;;;12     	TIM_MasterConfigTypeDef sMasterConfig;
;;;13     
;;;14     	htim2.Instance = TIM2;
000002  480f              LDR      r0,|L5.64|
000004  b089              SUB      sp,sp,#0x24           ;10
000006  f04f4180          MOV      r1,#0x40000000
;;;15     	htim2.Init.Prescaler = 0;
00000a  2400              MOVS     r4,#0
00000c  e9c01400          STRD     r1,r4,[r0,#0]
;;;16     	htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
;;;17     	htim2.Init.Period = 1;
000010  2501              MOVS     r5,#1
000012  e9c04502          STRD     r4,r5,[r0,#8]
;;;18     	htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
;;;19     	HAL_TIM_PWM_Init(&htim2);
000016  6104              STR      r4,[r0,#0x10]  ; htim2
000018  f7fffffe          BL       HAL_TIM_PWM_Init
;;;20     
;;;21     	sConfigOC.OCMode = TIM_OCMODE_PWM1;
00001c  2060              MOVS     r0,#0x60
00001e  9000              STR      r0,[sp,#0]
000020  e9cd5401          STRD     r5,r4,[sp,#4]
;;;22     	sConfigOC.Pulse = 1;
;;;23     	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
;;;24     	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
;;;25     	HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3);
000024  2208              MOVS     r2,#8
000026  4669              MOV      r1,sp
000028  4805              LDR      r0,|L5.64|
00002a  9404              STR      r4,[sp,#0x10]
00002c  f7fffffe          BL       HAL_TIM_PWM_ConfigChannel
;;;26     
;;;27     	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
;;;28     	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
000030  9407              STR      r4,[sp,#0x1c]
;;;29     	HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig);
000032  a907              ADD      r1,sp,#0x1c
000034  4802              LDR      r0,|L5.64|
000036  9408              STR      r4,[sp,#0x20]
000038  f7fffffe          BL       HAL_TIMEx_MasterConfigSynchronization
;;;30     	}
00003c  b009              ADD      sp,sp,#0x24
00003e  bd30              POP      {r4,r5,pc}
;;;31     
                          ENDP

                  |L5.64|
                          DCD      ||.bss||

                          AREA ||i.MX_TIM7_Init||, CODE, READONLY, ALIGN=2

                  MX_TIM7_Init PROC
;;;63     
;;;64     void MX_TIM7_Init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;65     	{
;;;66     	TIM_MasterConfigTypeDef sMasterConfig;
;;;67     	htim7.Instance = TIM7;
000002  480c              LDR      r0,|L6.52|
000004  490a              LDR      r1,|L6.48|
;;;68     	htim7.Init.Period = 60000; // 60000 - 8 kHz
;;;69     	htim7.Init.Prescaler = 0;
000006  2400              MOVS     r4,#0
000008  6001              STR      r1,[r0,#0]            ;68  ; htim7
00000a  f64e2160          MOV      r1,#0xea60            ;68
00000e  6044              STR      r4,[r0,#4]  ; htim7
000010  e9c01403          STRD     r1,r4,[r0,#0xc]
;;;70     	htim7.Init.ClockDivision = 0;
;;;71     	htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
;;;72     	HAL_TIM_Base_Init(&htim7);
000014  6084              STR      r4,[r0,#8]  ; htim7
000016  f7fffffe          BL       HAL_TIM_Base_Init
;;;73     
;;;74     	sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
00001a  2020              MOVS     r0,#0x20
00001c  e9cd0400          STRD     r0,r4,[sp,#0]
;;;75     	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
;;;76     
;;;77     	HAL_TIM_Base_Start_IT(&htim7);
000020  4804              LDR      r0,|L6.52|
000022  f7fffffe          BL       HAL_TIM_Base_Start_IT
;;;78     	HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig);
000026  4669              MOV      r1,sp
000028  4802              LDR      r0,|L6.52|
00002a  f7fffffe          BL       HAL_TIMEx_MasterConfigSynchronization
;;;79     	}
00002e  bd1c              POP      {r2-r4,pc}
;;;80     
                          ENDP

                  |L6.48|
                          DCD      0x40001400
                  |L6.52|
                          DCD      ||.bss||+0x3c

                          AREA ||i.TIM_CORE_getCallback||, CODE, READONLY, ALIGN=2

                  TIM_CORE_getCallback PROC
;;;133    
;;;134    void TIM_CORE_getCallback(TIM_HandleTypeDef *htim, void (**_pCallback)() )
000000  6800              LDR      r0,[r0,#0]
;;;135    	{
;;;136    	if( htim->Instance == TIM7 )
000002  4a04              LDR      r2,|L7.20|
000004  4290              CMP      r0,r2
000006  d102              BNE      |L7.14|
;;;137    		{
;;;138    		*_pCallback = TIM_CORE_tim7Callback;
000008  4803              LDR      r0,|L7.24|
00000a  6800              LDR      r0,[r0,#0]  ; TIM_CORE_tim7Callback
00000c  e000              B        |L7.16|
                  |L7.14|
;;;139    		}
;;;140    	else
;;;141    		{
;;;142    		*_pCallback = NULL;
00000e  2000              MOVS     r0,#0
                  |L7.16|
000010  6008              STR      r0,[r1,#0]            ;138
;;;143    		}
;;;144    	}
000012  4770              BX       lr
;;;145    
                          ENDP

                  |L7.20|
                          DCD      0x40001400
                  |L7.24|
                          DCD      ||.data||

                          AREA ||i.TIM_CORE_initTim2||, CODE, READONLY, ALIGN=2

                  TIM_CORE_initTim2 PROC
;;;51     
;;;52     void TIM_CORE_initTim2(void)
000000  b510              PUSH     {r4,lr}
;;;53     	{
;;;54     	HAL_TIM_PWM_MspInit(&htim2);
000002  4805              LDR      r0,|L8.24|
000004  f7fffffe          BL       HAL_TIM_PWM_MspInit
;;;55     	MX_TIM2_Init();
000008  f7fffffe          BL       MX_TIM2_Init
;;;56     	HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
00000c  e8bd4010          POP      {r4,lr}
000010  2108              MOVS     r1,#8
000012  4801              LDR      r0,|L8.24|
000014  f7ffbffe          B.W      HAL_TIM_PWM_Start
;;;57     	}
;;;58     #endif
                          ENDP

                  |L8.24|
                          DCD      ||.bss||

                          AREA ||i.TIM_CORE_initTim7||, CODE, READONLY, ALIGN=1

                  TIM_CORE_initTim7 PROC
;;;120    
;;;121    void TIM_CORE_initTim7(void)
000000  f7ffbffe          B.W      MX_TIM7_Init
;;;122    	{
;;;123    	MX_TIM7_Init();
;;;124    	}
;;;125    
                          ENDP


                          AREA ||i.TIM_CORE_setCallback||, CODE, READONLY, ALIGN=2

                  TIM_CORE_setCallback PROC
;;;125    
;;;126    void TIM_CORE_setCallback(TIM_HandleTypeDef *htim, void (*pCallback)(void))
000000  6800              LDR      r0,[r0,#0]
;;;127    	{
;;;128    	if( htim->Instance == TIM7 )
000002  4a03              LDR      r2,|L10.16|
000004  4290              CMP      r0,r2
000006  d101              BNE      |L10.12|
;;;129    		{
;;;130    		TIM_CORE_tim7Callback = pCallback;
000008  4802              LDR      r0,|L10.20|
00000a  6001              STR      r1,[r0,#0]  ; TIM_CORE_tim7Callback
                  |L10.12|
;;;131    		}
;;;132    	}
00000c  4770              BX       lr
;;;133    
                          ENDP

00000e  0000              DCW      0x0000
                  |L10.16|
                          DCD      0x40001400
                  |L10.20|
                          DCD      ||.data||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  htim2
                          %        60
                  htim7
                          %        60

                          AREA ||.data||, DATA, ALIGN=2

                  TIM_CORE_tim7Callback
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\Src\\core\\timCore.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_timCore_c_d738263a____REV16|
#line 129 "..\\..\\Drivers\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_timCore_c_d738263a____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_timCore_c_d738263a____REVSH|
#line 144
|__asm___9_timCore_c_d738263a____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
