; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o"bhd2 configuration\usbd_desc.o" --asm_dir=.\list\ --list_dir=.\list\ --depend="bhd2 configuration\usbd_desc.d" --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\..\Drivers\CMSIS\Device\ST\STM32F2xx\Include -I..\..\Drivers\CMSIS\Include -I..\..\Middlewares\ST\STM32_USB_Device_Library\Class\CDC\Inc -I..\..\Middlewares\ST\STM32_USB_Device_Library\Core\Inc -I..\..\Drivers\STM32F2xx_HAL_Driver\Inc -I..\..\Inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DUSE_HAL_DRIVER -DSTM32F215xx --omf_browse="bhd2 configuration\usbd_desc.crf" ..\..\Src\usbd_desc.c]
                          THUMB

                          AREA ||i.USBD_HS_ConfigStrDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_HS_ConfigStrDescriptor PROC
;;;282    */
;;;283    uint8_t *  USBD_HS_ConfigStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
000000  b510              PUSH     {r4,lr}
;;;284    {
;;;285    	PRINT_FUNC;
;;;286      if(speed  == USBD_SPEED_HIGH)
;;;287      {
;;;288        USBD_GetString ((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
;;;289      }
;;;290      else
;;;291      {
;;;292        USBD_GetString ((uint8_t *)USBD_CONFIGURATION_STRING_HS, USBD_StrDesc, length);
000002  460a              MOV      r2,r1
000004  4902              LDR      r1,|L1.16|
000006  a003              ADR      r0,|L1.20|
000008  f7fffffe          BL       USBD_GetString
;;;293      }
;;;294      return USBD_StrDesc;
00000c  4800              LDR      r0,|L1.16|
;;;295    }
00000e  bd10              POP      {r4,pc}
;;;296    
                          ENDP

                  |L1.16|
                          DCD      ||.bss||
                  |L1.20|
000014  43444320          DCB      "CDC Config or not",0
000018  436f6e66
00001c  6967206f
000020  72206e6f
000024  7400    
000026  00                DCB      0
000027  00                DCB      0

                          AREA ||i.USBD_HS_DeviceDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_HS_DeviceDescriptor PROC
;;;198    */
;;;199    uint8_t *  USBD_HS_DeviceDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
000000  2012              MOVS     r0,#0x12
;;;200    {
;;;201    	PRINT_FUNC;
;;;202      *length = sizeof(USBD_HS_DeviceDesc);
000002  8008              STRH     r0,[r1,#0]
;;;203      return USBD_HS_DeviceDesc;
000004  4800              LDR      r0,|L2.8|
;;;204    }
000006  4770              BX       lr
;;;205    
                          ENDP

                  |L2.8|
                          DCD      ||area_number.12||+0x4

                          AREA ||i.USBD_HS_InterfaceStrDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_HS_InterfaceStrDescriptor PROC
;;;303    */
;;;304    uint8_t *  USBD_HS_InterfaceStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
000000  b510              PUSH     {r4,lr}
;;;305    {
;;;306    	PRINT_FUNC;
;;;307      if(speed == 0)
;;;308      {
;;;309        USBD_GetString ((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
;;;310      }
;;;311      else
;;;312      {
;;;313        USBD_GetString ((uint8_t *)USBD_INTERFACE_STRING_HS, USBD_StrDesc, length);
000002  460a              MOV      r2,r1
000004  4902              LDR      r1,|L3.16|
000006  a003              ADR      r0,|L3.20|
000008  f7fffffe          BL       USBD_GetString
;;;314      }
;;;315      return USBD_StrDesc;
00000c  4800              LDR      r0,|L3.16|
;;;316    }
00000e  bd10              POP      {r4,pc}
;;;317    
                          ENDP

                  |L3.16|
                          DCD      ||.bss||
                  |L3.20|
000014  43444320          DCB      "CDC Interface or not",0
000018  496e7465
00001c  72666163
000020  65206f72
000024  206e6f74
000028  00      
000029  00                DCB      0
00002a  00                DCB      0
00002b  00                DCB      0

                          AREA ||i.USBD_HS_LangIDStrDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_HS_LangIDStrDescriptor PROC
;;;212    */
;;;213    uint8_t *  USBD_HS_LangIDStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
000000  2004              MOVS     r0,#4
;;;214    {
;;;215    	PRINT_FUNC;
;;;216      *length =  sizeof(USBD_LangIDDesc);
000002  8008              STRH     r0,[r1,#0]
;;;217      return USBD_LangIDDesc;
000004  4800              LDR      r0,|L4.8|
;;;218    }
000006  4770              BX       lr
;;;219    
                          ENDP

                  |L4.8|
                          DCD      ||area_number.12||

                          AREA ||i.USBD_HS_ManufacturerStrDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_HS_ManufacturerStrDescriptor PROC
;;;247    */
;;;248    uint8_t *  USBD_HS_ManufacturerStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
000000  b510              PUSH     {r4,lr}
;;;249    {
;;;250    	PRINT_FUNC;
;;;251      USBD_GetString ((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
000002  460a              MOV      r2,r1
000004  4902              LDR      r1,|L5.16|
000006  a003              ADR      r0,|L5.20|
000008  f7fffffe          BL       USBD_GetString
;;;252      return USBD_StrDesc;
00000c  4800              LDR      r0,|L5.16|
;;;253    }
00000e  bd10              POP      {r4,pc}
;;;254    
                          ENDP

                  |L5.16|
                          DCD      ||.bss||
                  |L5.20|
000014  53656c66          DCB      "Self made",0
000018  206d6164
00001c  6500    
00001e  00                DCB      0
00001f  00                DCB      0

                          AREA ||i.USBD_HS_ProductStrDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_HS_ProductStrDescriptor PROC
;;;226    */
;;;227    uint8_t *  USBD_HS_ProductStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
000000  b510              PUSH     {r4,lr}
;;;228    {
;;;229    	PRINT_FUNC;
;;;230      if(speed == 0)
;;;231      {
;;;232        USBD_GetString ((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
;;;233      }
;;;234      else
;;;235      {
;;;236        USBD_GetString ((uint8_t *)USBD_PRODUCT_STRING_HS, USBD_StrDesc, length);
000002  460a              MOV      r2,r1
000004  4902              LDR      r1,|L6.16|
000006  a003              ADR      r0,|L6.20|
000008  f7fffffe          BL       USBD_GetString
;;;237      }
;;;238      return USBD_StrDesc;
00000c  4800              LDR      r0,|L6.16|
;;;239    }
00000e  bd10              POP      {r4,pc}
;;;240    
                          ENDP

                  |L6.16|
                          DCD      ||.bss||
                  |L6.20|
000014  48656c6c          DCB      "Hello World",0
000018  6f20576f
00001c  726c6400

                          AREA ||i.USBD_HS_SerialStrDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_HS_SerialStrDescriptor PROC
;;;261    */
;;;262    uint8_t *  USBD_HS_SerialStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
000000  b510              PUSH     {r4,lr}
;;;263    {
;;;264    	PRINT_FUNC;
;;;265      if(speed  == USBD_SPEED_HIGH)
;;;266      {
;;;267        USBD_GetString ((uint8_t *)USBD_SERIALNUMBER_STRING_HS, USBD_StrDesc, length);
;;;268      }
;;;269      else
;;;270      {
;;;271        USBD_GetString ((uint8_t *)USBD_SERIALNUMBER_STRING_HS, USBD_StrDesc, length);
000002  460a              MOV      r2,r1
000004  4902              LDR      r1,|L7.16|
000006  a003              ADR      r0,|L7.20|
000008  f7fffffe          BL       USBD_GetString
;;;272      }
;;;273      return USBD_StrDesc;
00000c  4800              LDR      r0,|L7.16|
;;;274    }
00000e  bd10              POP      {r4,pc}
;;;275    
                          ENDP

                  |L7.16|
                          DCD      ||.bss||
                  |L7.20|
000014  30303030          DCB      "00000000001A",0
000018  30303030
00001c  30303141
000020  00      
000021  00                DCB      0
000022  00                DCB      0
000023  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  USBD_StrDesc
                          %        512

                          AREA ||.data||, DATA, ALIGN=2

                  HS_Desc
                          DCD      USBD_HS_DeviceDescriptor
                          DCD      USBD_HS_LangIDStrDescriptor
                          DCD      USBD_HS_ManufacturerStrDescriptor
                          DCD      USBD_HS_ProductStrDescriptor
                          DCD      USBD_HS_SerialStrDescriptor
                          DCD      USBD_HS_ConfigStrDescriptor
                          DCD      USBD_HS_InterfaceStrDescriptor

                          AREA ||area_number.12||, DATA, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.data||
                  USBD_LangIDDesc
000000  04030904          DCB      0x04,0x03,0x09,0x04
                  USBD_HS_DeviceDesc
000004  12010002          DCB      0x12,0x01,0x00,0x02
000008  02000040          DCB      0x02,0x00,0x00,0x40
00000c  425f5255          DCB      0x42,0x5f,0x52,0x55
000010  00020000          DCB      0x00,0x02,0x00,0x00
000014  0001              DCB      0x00,0x01

;*** Start embedded assembler ***

#line 1 "..\\..\\Src\\usbd_desc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_usbd_desc_c_HS_Desc____REV16|
#line 129 "..\\..\\Drivers\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_usbd_desc_c_HS_Desc____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_usbd_desc_c_HS_Desc____REVSH|
#line 144
|__asm___11_usbd_desc_c_HS_Desc____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
